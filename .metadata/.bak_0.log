!SESSION 2014-11-11 15:22:54.267 -----------------------------------------------
eclipse.buildId=M20130204-1200
java.version=1.8.0_25
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product com.android.ide.eclipse.adt.package.adtproduct -keyring /Users/jorgeguerra/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product com.android.ide.eclipse.adt.package.adtproduct -keyring /Users/jorgeguerra/.eclipse_keyring -showlocation

This is a continuation of log file /Users/jorgeguerra/Documents/deadlywheels/.metadata/.bak_0.log
Created Time: 2014-11-11 15:23:11.375

!ENTRY org.eclipse.osgi 2 0 2014-11-11 15:23:11.376
!MESSAGE While loading class "com.android.ide.eclipse.adt.internal.welcome.AdtStartup$SdkValidator", thread "Thread[Worker-4,5,main]" timed out waiting (5002ms) for thread "Thread[Worker-2,5,main]" to finish starting bundle "com.android.ide.eclipse.adt_23.0.2.1259578 [2]". To avoid deadlock, thread "Thread[Worker-4,5,main]" is proceeding but "com.android.ide.eclipse.adt.internal.welcome.AdtStartup$SdkValidator" may not be fully initialized.
!STACK 0
org.osgi.framework.BundleException: State change in progress for bundle "reference:file:plugins/com.android.ide.eclipse.adt_23.0.2.1259578.jar" by thread "Worker-2".
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.beginStateChange(AbstractBundle.java:1088)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:298)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:440)
	at org.eclipse.osgi.internal.loader.BundleLoader.setLazyTrigger(BundleLoader.java:263)
	at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:469)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:216)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:395)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:464)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:421)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:412)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:107)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:2663)
	at java.lang.Class.getConstructor0(Class.java:3067)
	at java.lang.Class.newInstance(Class.java:408)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:184)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:905)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:55)
	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:265)
	at org.eclipse.ui.internal.EarlyStartupRunnable.getExecutableExtension(EarlyStartupRunnable.java:117)
	at org.eclipse.ui.internal.EarlyStartupRunnable.run(EarlyStartupRunnable.java:66)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.Workbench$54.run(Workbench.java:2412)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)
Caused by: org.eclipse.osgi.framework.internal.core.AbstractBundle$BundleStatusException
	... 27 more
Root exception:
org.eclipse.osgi.framework.internal.core.AbstractBundle$BundleStatusException
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.beginStateChange(AbstractBundle.java:1088)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:298)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:440)
	at org.eclipse.osgi.internal.loader.BundleLoader.setLazyTrigger(BundleLoader.java:263)
	at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:469)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:216)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:395)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:464)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:421)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:412)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:107)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:2663)
	at java.lang.Class.getConstructor0(Class.java:3067)
	at java.lang.Class.newInstance(Class.java:408)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:184)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:905)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:55)
	at org.eclipse.ui.internal.WorkbenchPlugin.createExtension(WorkbenchPlugin.java:265)
	at org.eclipse.ui.internal.EarlyStartupRunnable.getExecutableExtension(EarlyStartupRunnable.java:117)
	at org.eclipse.ui.internal.EarlyStartupRunnable.run(EarlyStartupRunnable.java:66)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.Workbench$54.run(Workbench.java:2412)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.osgi 2 0 2014-11-11 15:23:16.152
!MESSAGE While loading class "com.android.ide.eclipse.adt.internal.project.LibraryClasspathContainerInitializer", thread "Thread[Worker-3,5,main]" timed out waiting (5002ms) for thread "Thread[Worker-2,5,main]" to finish starting bundle "com.android.ide.eclipse.adt_23.0.2.1259578 [2]". To avoid deadlock, thread "Thread[Worker-3,5,main]" is proceeding but "com.android.ide.eclipse.adt.internal.project.LibraryClasspathContainerInitializer" may not be fully initialized.
!STACK 0
org.osgi.framework.BundleException: State change in progress for bundle "reference:file:plugins/com.android.ide.eclipse.adt_23.0.2.1259578.jar" by thread "Worker-2".
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.beginStateChange(AbstractBundle.java:1088)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:298)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:440)
	at org.eclipse.osgi.internal.loader.BundleLoader.setLazyTrigger(BundleLoader.java:263)
	at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:469)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:216)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:395)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:464)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:421)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:412)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:107)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.eclipse.osgi.internal.loader.BundleLoader.loadClass(BundleLoader.java:340)
	at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:229)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass(AbstractBundle.java:1212)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:174)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:905)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:55)
	at org.eclipse.jdt.core.JavaCore.computeClasspathContainerInitializer(JavaCore.java:3175)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainerInitializer(JavaCore.java:3151)
	at org.eclipse.jdt.internal.core.JavaModelManager.initializeContainer(JavaModelManager.java:2824)
	at org.eclipse.jdt.internal.core.JavaModelManager$11.run(JavaModelManager.java:2749)
	at org.eclipse.jdt.internal.core.JavaModelManager.initializeAllContainers(JavaModelManager.java:2787)
	at org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(JavaModelManager.java:1873)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:3128)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:2691)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:2855)
	at org.eclipse.jdt.internal.core.ClasspathChange.generateDelta(ClasspathChange.java:220)
	at org.eclipse.jdt.internal.core.ChangeClasspathOperation.classpathChanged(ChangeClasspathOperation.java:67)
	at org.eclipse.jdt.internal.core.SetContainerOperation.executeOperation(SetContainerOperation.java:110)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(JavaModelManager.java:1881)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:3128)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:2691)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:2855)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1960)
	at org.eclipse.jdt.internal.core.ExternalFoldersManager.refreshReferences(ExternalFoldersManager.java:417)
	at org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged(DeltaProcessor.java:2016)
	at org.eclipse.jdt.internal.core.DeltaProcessingState.resourceChanged(DeltaProcessingState.java:470)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:291)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:285)
	at org.eclipse.core.internal.events.NotificationManager.handleEvent(NotificationManager.java:267)
	at org.eclipse.core.internal.resources.Workspace.broadcastEvent(Workspace.java:390)
	at org.eclipse.core.internal.resources.Resource.refreshLocal(Resource.java:1698)
	at com.android.ide.eclipse.adt.internal.project.BaseProjectHelper.markProject(BaseProjectHelper.java:220)
	at com.android.ide.eclipse.adt.internal.project.BaseClasspathContainerInitializer$1.run(BaseClasspathContainerInitializer.java:60)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)
Caused by: org.eclipse.osgi.framework.internal.core.AbstractBundle$BundleStatusException
	... 51 more
Root exception:
org.eclipse.osgi.framework.internal.core.AbstractBundle$BundleStatusException
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.beginStateChange(AbstractBundle.java:1088)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.start(AbstractBundle.java:298)
	at org.eclipse.osgi.framework.util.SecureAction.start(SecureAction.java:440)
	at org.eclipse.osgi.internal.loader.BundleLoader.setLazyTrigger(BundleLoader.java:263)
	at org.eclipse.core.runtime.internal.adaptor.EclipseLazyStarter.postFindLocalClass(EclipseLazyStarter.java:107)
	at org.eclipse.osgi.baseadaptor.loader.ClasspathManager.findLocalClass(ClasspathManager.java:469)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLocalClass(DefaultClassLoader.java:216)
	at org.eclipse.osgi.internal.loader.BundleLoader.findLocalClass(BundleLoader.java:395)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClassInternal(BundleLoader.java:464)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:421)
	at org.eclipse.osgi.internal.loader.BundleLoader.findClass(BundleLoader.java:412)
	at org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.loadClass(DefaultClassLoader.java:107)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.eclipse.osgi.internal.loader.BundleLoader.loadClass(BundleLoader.java:340)
	at org.eclipse.osgi.framework.internal.core.BundleHost.loadClass(BundleHost.java:229)
	at org.eclipse.osgi.framework.internal.core.AbstractBundle.loadClass(AbstractBundle.java:1212)
	at org.eclipse.core.internal.registry.osgi.RegistryStrategyOSGI.createExecutableExtension(RegistryStrategyOSGI.java:174)
	at org.eclipse.core.internal.registry.ExtensionRegistry.createExecutableExtension(ExtensionRegistry.java:905)
	at org.eclipse.core.internal.registry.ConfigurationElement.createExecutableExtension(ConfigurationElement.java:243)
	at org.eclipse.core.internal.registry.ConfigurationElementHandle.createExecutableExtension(ConfigurationElementHandle.java:55)
	at org.eclipse.jdt.core.JavaCore.computeClasspathContainerInitializer(JavaCore.java:3175)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainerInitializer(JavaCore.java:3151)
	at org.eclipse.jdt.internal.core.JavaModelManager.initializeContainer(JavaModelManager.java:2824)
	at org.eclipse.jdt.internal.core.JavaModelManager$11.run(JavaModelManager.java:2749)
	at org.eclipse.jdt.internal.core.JavaModelManager.initializeAllContainers(JavaModelManager.java:2787)
	at org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(JavaModelManager.java:1873)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:3128)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:2691)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:2855)
	at org.eclipse.jdt.internal.core.ClasspathChange.generateDelta(ClasspathChange.java:220)
	at org.eclipse.jdt.internal.core.ChangeClasspathOperation.classpathChanged(ChangeClasspathOperation.java:67)
	at org.eclipse.jdt.internal.core.SetContainerOperation.executeOperation(SetContainerOperation.java:110)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.JavaModelManager.getClasspathContainer(JavaModelManager.java:1881)
	at org.eclipse.jdt.core.JavaCore.getClasspathContainer(JavaCore.java:3128)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:2691)
	at org.eclipse.jdt.internal.core.JavaProject.resolveClasspath(JavaProject.java:2855)
	at org.eclipse.jdt.internal.core.JavaProject.getResolvedClasspath(JavaProject.java:1960)
	at org.eclipse.jdt.internal.core.ExternalFoldersManager.refreshReferences(ExternalFoldersManager.java:417)
	at org.eclipse.jdt.internal.core.DeltaProcessor.resourceChanged(DeltaProcessor.java:2016)
	at org.eclipse.jdt.internal.core.DeltaProcessingState.resourceChanged(DeltaProcessingState.java:470)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:291)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:285)
	at org.eclipse.core.internal.events.NotificationManager.handleEvent(NotificationManager.java:267)
	at org.eclipse.core.internal.resources.Workspace.broadcastEvent(Workspace.java:390)
	at org.eclipse.core.internal.resources.Resource.refreshLocal(Resource.java:1698)
	at com.android.ide.eclipse.adt.internal.project.BaseProjectHelper.markProject(BaseProjectHelper.java:220)
	at com.android.ide.eclipse.adt.internal.project.BaseClasspathContainerInitializer$1.run(BaseClasspathContainerInitializer.java:60)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY com.android.ide.eclipse.adt 4 4 2014-11-11 15:23:17.125
!MESSAGE Failed
!STACK 0
java.lang.NullPointerException
	at com.android.ide.eclipse.adt.internal.lint.EclipseLintClient.getTargets(EclipseLintClient.java:916)
	at com.android.tools.lint.detector.api.Project.readManifest(Project.java:652)
	at com.android.tools.lint.client.api.LintDriver.runFileDetectors(LintDriver.java:946)
	at com.android.tools.lint.client.api.LintDriver.checkProject(LintDriver.java:880)
	at com.android.tools.lint.client.api.LintDriver.analyze(LintDriver.java:431)
	at com.android.tools.lint.client.api.LintDriver.analyze(LintDriver.java:374)
	at com.android.ide.eclipse.adt.internal.lint.LintJob.run(LintJob.java:163)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jface 2 0 2014-11-11 15:24:33.419
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:24:33.419
!MESSAGE A conflict occurred for COMMAND+I:
Binding(COMMAND+I,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.indent,Correct Indentation,
		Corrects the indentation of the selected lines,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@35e59c13,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+I,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.format.active.elements,Format Active Elements,
		Format active elements,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@79c5460e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
Binding(COMMAND+I,
	ParameterizedCommand(Command(org.eclipse.ui.file.properties,Properties,
		Display the properties of the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@62db3891,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:24:33.419
!MESSAGE A conflict occurred for COMMAND+O:
Binding(COMMAND+O,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.show.outline,Quick Outline,
		Show the quick outline for the editor input,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@3da94286,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+O,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.quick_outline,Quick Outline,
		Show the quick outline for the editor input,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@ad58e2c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:24:33.419
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_RIGHT:
Binding(CTRL+SHIFT+ARROW_RIGHT,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.next,Select Next Element,
		Expand selection to include next sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@58f437b0,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_RIGHT,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.next,Select Next Element,
		Expand selection to include next sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@57497703,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:24:33.419
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_LEFT:
Binding(CTRL+SHIFT+ARROW_LEFT,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.previous,Select Previous Element,
		Expand selection to include previous sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@4ed56cfd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_LEFT,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.previous,Select Previous Element,
		Expand selection to include previous sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@2687725a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:24:33.419
!MESSAGE A conflict occurred for COMMAND+SHIFT+F:
Binding(COMMAND+SHIFT+F,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.format,Format,
		Format the selected text,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@399faad3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+SHIFT+F,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.format.document,Format,
		Format selection,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@47d023b7,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:24:33.419
!MESSAGE A conflict occurred for COMMAND+/:
Binding(COMMAND+/,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.toggle.comment,Toggle Comment,
		Toggle comment the selected lines,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@1f9df722,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+/,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.add.block.comment,Add Block Comment,
		Add Block Comment,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@257e0827,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:24:33.419
!MESSAGE A conflict occurred for COMMAND+SHIFT+P:
Binding(COMMAND+SHIFT+P,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.goto.matching.bracket,Go to Matching Bracket,
		Moves the cursor to the matching bracket,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@3f06abd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+SHIFT+P,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.goto.matching.bracket,Matching Bracket,
		Go to Matching Bracket,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@6614bd4b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:24:33.419
!MESSAGE A conflict occurred for COMMAND+SHIFT+C:
Binding(COMMAND+SHIFT+C,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.toggle.comment,Toggle Comment,
		Toggle comment the selected lines,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@1f9df722,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+SHIFT+C,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.toggle.comment,Toggle Comment,
		Toggle Comment,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@7f6874f2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:24:33.419
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_UP:
Binding(CTRL+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.wst.xml.ui.previousSibling,Previous Sibling,
		Go to Previous Sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@6f76c2cc,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.enclosing,Select Enclosing Element,
		Expand selection to include enclosing element,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@43f9dd56,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.core.runtime.xml,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.enclosing,Select Enclosing Element,
		Expand selection to include enclosing element,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@66a74cba,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:24:33.419
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_DOWN:
Binding(CTRL+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.last,Restore Last Selection,
		Restore last selection,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@222abb8f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.last,Restore Last Selection,
		Restore last selection,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@5a8ab2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.core.runtime.xml,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.wst.xml.ui.nextSibling,Next Sibling,
		Go to Next Sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@60d40ff4,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:24:33.419
!MESSAGE A conflict occurred for COMMAND+SHIFT+\:
Binding(COMMAND+SHIFT+\,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.remove.block.comment,Remove Block Comment,
		Remove the block comment enclosing the selection,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@52fe7c0f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+SHIFT+\,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.remove.block.comment,Remove Block Comment,
		Remove Block Comment,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@427ae189,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)

!ENTRY org.eclipse.ui 2 2 2014-11-11 15:25:00.495
!MESSAGE Invalid property category path: ValidationPropertiesPage (bundle: org.eclipse.wst.xml.ui, propertyPage: org.eclipse.wst.xml.ui.propertyPage.project.validation)

!ENTRY com.android.ide.eclipse.adt 2 0 2014-11-11 15:44:40.710
!MESSAGE No projects found for [/Users/jorgeguerra/Documents/deadlywheels/DeadlyWheels/bin/classes/groupa/deadlywheels/ui/CarControlActivity.class]
!SESSION 2014-11-11 15:48:05.749 -----------------------------------------------
eclipse.buildId=M20130204-1200
java.version=1.8.0_25
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product com.android.ide.eclipse.adt.package.adtproduct -keyring /Users/jorgeguerra/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product com.android.ide.eclipse.adt.package.adtproduct -keyring /Users/jorgeguerra/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2014-11-11 15:48:11.919
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.ui 2 2 2014-11-11 15:48:22.717
!MESSAGE Invalid property category path: ValidationPropertiesPage (bundle: org.eclipse.wst.xml.ui, propertyPage: org.eclipse.wst.xml.ui.propertyPage.project.validation)
!SESSION 2014-11-11 15:48:30.069 -----------------------------------------------
eclipse.buildId=M20130204-1200
java.version=1.8.0_25
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product com.android.ide.eclipse.adt.package.adtproduct -keyring /Users/jorgeguerra/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product com.android.ide.eclipse.adt.package.adtproduct -keyring /Users/jorgeguerra/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2014-11-11 15:48:37.005
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.ui 2 2 2014-11-11 15:49:11.993
!MESSAGE Invalid property category path: ValidationPropertiesPage (bundle: org.eclipse.wst.xml.ui, propertyPage: org.eclipse.wst.xml.ui.propertyPage.project.validation)

!ENTRY org.eclipse.jface 2 0 2014-11-11 15:52:28.601
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:52:28.601
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_LEFT:
Binding(CTRL+SHIFT+ARROW_LEFT,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.previous,Select Previous Element,
		Expand selection to include previous sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@6e4667af,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_LEFT,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.previous,Select Previous Element,
		Expand selection to include previous sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@6d11ceef,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:52:28.601
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_RIGHT:
Binding(CTRL+SHIFT+ARROW_RIGHT,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.next,Select Next Element,
		Expand selection to include next sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@30ca0779,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_RIGHT,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.next,Select Next Element,
		Expand selection to include next sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@e207342,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:52:28.601
!MESSAGE A conflict occurred for COMMAND+SHIFT+F:
Binding(COMMAND+SHIFT+F,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.format,Format,
		Format the selected text,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@57eab3f5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+SHIFT+F,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.format.document,Format,
		Format selection,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@3af7d855,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:52:28.601
!MESSAGE A conflict occurred for COMMAND+I:
Binding(COMMAND+I,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.indent,Correct Indentation,
		Corrects the indentation of the selected lines,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@698dd40c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+I,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.format.active.elements,Format Active Elements,
		Format active elements,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@4a2929a4,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
Binding(COMMAND+I,
	ParameterizedCommand(Command(org.eclipse.ui.file.properties,Properties,
		Display the properties of the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@704641e3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:52:28.601
!MESSAGE A conflict occurred for COMMAND+SHIFT+P:
Binding(COMMAND+SHIFT+P,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.goto.matching.bracket,Go to Matching Bracket,
		Moves the cursor to the matching bracket,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@34abbd8d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+SHIFT+P,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.goto.matching.bracket,Matching Bracket,
		Go to Matching Bracket,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@60b34931,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:52:28.601
!MESSAGE A conflict occurred for COMMAND+SHIFT+C:
Binding(COMMAND+SHIFT+C,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.toggle.comment,Toggle Comment,
		Toggle comment the selected lines,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@391c6239,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+SHIFT+C,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.toggle.comment,Toggle Comment,
		Toggle Comment,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@352ed70d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:52:28.601
!MESSAGE A conflict occurred for COMMAND+O:
Binding(COMMAND+O,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.show.outline,Quick Outline,
		Show the quick outline for the editor input,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@3b6b0bf4,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+O,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.quick_outline,Quick Outline,
		Show the quick outline for the editor input,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@3c419521,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:52:28.601
!MESSAGE A conflict occurred for COMMAND+/:
Binding(COMMAND+/,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.toggle.comment,Toggle Comment,
		Toggle comment the selected lines,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@391c6239,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+/,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.add.block.comment,Add Block Comment,
		Add Block Comment,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@4993febc,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:52:28.601
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_UP:
Binding(CTRL+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.wst.xml.ui.previousSibling,Previous Sibling,
		Go to Previous Sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@178f268a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.enclosing,Select Enclosing Element,
		Expand selection to include enclosing element,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@94e51e8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.core.runtime.xml,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.enclosing,Select Enclosing Element,
		Expand selection to include enclosing element,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@556f00f1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:52:28.601
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_DOWN:
Binding(CTRL+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.last,Restore Last Selection,
		Restore last selection,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@fb8adcf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.last,Restore Last Selection,
		Restore last selection,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@1caa9eb6,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.core.runtime.xml,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.wst.xml.ui.nextSibling,Next Sibling,
		Go to Next Sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@7132a9dc,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:52:28.601
!MESSAGE A conflict occurred for COMMAND+SHIFT+\:
Binding(COMMAND+SHIFT+\,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.remove.block.comment,Remove Block Comment,
		Remove the block comment enclosing the selection,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@6cef2367,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+SHIFT+\,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.remove.block.comment,Remove Block Comment,
		Remove Block Comment,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@57562473,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SESSION 2014-11-11 15:53:45.823 -----------------------------------------------
eclipse.buildId=M20130204-1200
java.version=1.8.0_25
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product com.android.ide.eclipse.adt.package.adtproduct -keyring /Users/jorgeguerra/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product com.android.ide.eclipse.adt.package.adtproduct -keyring /Users/jorgeguerra/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.resources 2 10035 2014-11-11 15:53:49.376
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.core.net 1 0 2014-11-11 15:53:50.982
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY com.android.ide.eclipse.adt 4 4 2014-11-11 15:53:54.276
!MESSAGE Failed
!STACK 0
java.lang.NullPointerException
	at com.android.ide.eclipse.adt.internal.lint.EclipseLintClient.getTargets(EclipseLintClient.java:916)
	at com.android.tools.lint.detector.api.Project.readManifest(Project.java:652)
	at com.android.tools.lint.client.api.LintDriver.runFileDetectors(LintDriver.java:946)
	at com.android.tools.lint.client.api.LintDriver.checkProject(LintDriver.java:880)
	at com.android.tools.lint.client.api.LintDriver.analyze(LintDriver.java:431)
	at com.android.tools.lint.client.api.LintDriver.analyze(LintDriver.java:374)
	at com.android.ide.eclipse.adt.internal.lint.LintJob.run(LintJob.java:163)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jface 2 0 2014-11-11 15:55:53.587
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:55:53.587
!MESSAGE A conflict occurred for COMMAND+SHIFT+P:
Binding(COMMAND+SHIFT+P,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.goto.matching.bracket,Go to Matching Bracket,
		Moves the cursor to the matching bracket,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@17f856a3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+SHIFT+P,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.goto.matching.bracket,Matching Bracket,
		Go to Matching Bracket,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@427ae189,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:55:53.587
!MESSAGE A conflict occurred for COMMAND+SHIFT+F:
Binding(COMMAND+SHIFT+F,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.format,Format,
		Format the selected text,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@3dd6a612,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+SHIFT+F,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.format.document,Format,
		Format selection,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@5981f4a6,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:55:53.587
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_LEFT:
Binding(CTRL+SHIFT+ARROW_LEFT,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.previous,Select Previous Element,
		Expand selection to include previous sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@41c6fd41,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_LEFT,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.previous,Select Previous Element,
		Expand selection to include previous sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@2d7a9786,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:55:53.588
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_RIGHT:
Binding(CTRL+SHIFT+ARROW_RIGHT,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.next,Select Next Element,
		Expand selection to include next sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@61bfc9bf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_RIGHT,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.next,Select Next Element,
		Expand selection to include next sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@38071cdb,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:55:53.588
!MESSAGE A conflict occurred for COMMAND+I:
Binding(COMMAND+I,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.indent,Correct Indentation,
		Corrects the indentation of the selected lines,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@6d9f0836,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+I,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.format.active.elements,Format Active Elements,
		Format active elements,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@4b4eced1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
Binding(COMMAND+I,
	ParameterizedCommand(Command(org.eclipse.ui.file.properties,Properties,
		Display the properties of the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@26844abb,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:55:53.588
!MESSAGE A conflict occurred for COMMAND+/:
Binding(COMMAND+/,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.toggle.comment,Toggle Comment,
		Toggle comment the selected lines,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@6571d5a1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+/,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.add.block.comment,Add Block Comment,
		Add Block Comment,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@9b9a327,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:55:53.588
!MESSAGE A conflict occurred for COMMAND+O:
Binding(COMMAND+O,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.show.outline,Quick Outline,
		Show the quick outline for the editor input,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@132b00bb,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+O,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.quick_outline,Quick Outline,
		Show the quick outline for the editor input,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@134a27c1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:55:53.588
!MESSAGE A conflict occurred for COMMAND+SHIFT+C:
Binding(COMMAND+SHIFT+C,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.toggle.comment,Toggle Comment,
		Toggle comment the selected lines,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@6571d5a1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+SHIFT+C,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.toggle.comment,Toggle Comment,
		Toggle Comment,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@3c78e551,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:55:53.588
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_UP:
Binding(CTRL+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.wst.xml.ui.previousSibling,Previous Sibling,
		Go to Previous Sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@58d6b7b9,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.enclosing,Select Enclosing Element,
		Expand selection to include enclosing element,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@3e67f5f2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.core.runtime.xml,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.enclosing,Select Enclosing Element,
		Expand selection to include enclosing element,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@6015326,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:55:53.588
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_DOWN:
Binding(CTRL+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.last,Restore Last Selection,
		Restore last selection,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@6d36529a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.last,Restore Last Selection,
		Restore last selection,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@f4a3a8d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.core.runtime.xml,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.wst.xml.ui.nextSibling,Next Sibling,
		Go to Next Sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@3f1ef9d6,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 15:55:53.588
!MESSAGE A conflict occurred for COMMAND+SHIFT+\:
Binding(COMMAND+SHIFT+\,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.remove.block.comment,Remove Block Comment,
		Remove the block comment enclosing the selection,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@2653b95f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+SHIFT+\,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.remove.block.comment,Remove Block Comment,
		Remove Block Comment,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@32177fa5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)

!ENTRY org.eclipse.ui 2 2 2014-11-11 15:56:00.472
!MESSAGE Invalid property category path: ValidationPropertiesPage (bundle: org.eclipse.wst.xml.ui, propertyPage: org.eclipse.wst.xml.ui.propertyPage.project.validation)

!ENTRY com.android.ide.eclipse.adt 4 0 2014-11-11 16:14:25.586
!MESSAGE Unknown exception in parseSdkContent.
!STACK 0
java.lang.ExceptionInInitializerError
	at android.graphics.Typeface_Accessor.resetDefaults(Typeface_Accessor.java:25)
	at com.android.layoutlib.bridge.Bridge.dispose(Bridge.java:306)
	at com.android.ide.common.rendering.LayoutLibrary.dispose(LayoutLibrary.java:312)
	at com.android.ide.eclipse.adt.internal.sdk.AndroidTargetData.dispose(AndroidTargetData.java:414)
	at com.android.ide.eclipse.adt.internal.sdk.Sdk.dispose(Sdk.java:964)
	at com.android.ide.eclipse.adt.internal.sdk.Sdk.loadSdk(Sdk.java:238)
	at com.android.ide.eclipse.adt.AdtPlugin$7.run(AdtPlugin.java:1415)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)
Caused by: java.lang.NullPointerException
	at java.io.File.<init>(File.java:277)
	at android.graphics.Typeface_Delegate.getSystemFontConfigLocation(Typeface_Delegate.java:196)
	at android.graphics.Typeface.getSystemFontConfigLocation(Typeface.java:354)
	at android.graphics.Typeface.init(Typeface.java:277)
	at android.graphics.Typeface.<clinit>(Typeface.java:336)
	... 8 more

!ENTRY com.android.ide.eclipse.adt 4 0 2014-11-11 16:14:25.587
!MESSAGE parseSdkContent failed
!STACK 0
java.lang.ExceptionInInitializerError
	at android.graphics.Typeface_Accessor.resetDefaults(Typeface_Accessor.java:25)
	at com.android.layoutlib.bridge.Bridge.dispose(Bridge.java:306)
	at com.android.ide.common.rendering.LayoutLibrary.dispose(LayoutLibrary.java:312)
	at com.android.ide.eclipse.adt.internal.sdk.AndroidTargetData.dispose(AndroidTargetData.java:414)
	at com.android.ide.eclipse.adt.internal.sdk.Sdk.dispose(Sdk.java:964)
	at com.android.ide.eclipse.adt.internal.sdk.Sdk.loadSdk(Sdk.java:238)
	at com.android.ide.eclipse.adt.AdtPlugin$7.run(AdtPlugin.java:1415)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)
Caused by: java.lang.NullPointerException
	at java.io.File.<init>(File.java:277)
	at android.graphics.Typeface_Delegate.getSystemFontConfigLocation(Typeface_Delegate.java:196)
	at android.graphics.Typeface.getSystemFontConfigLocation(Typeface.java:354)
	at android.graphics.Typeface.init(Typeface.java:277)
	at android.graphics.Typeface.<clinit>(Typeface.java:336)
	... 8 more

!ENTRY com.android.ide.eclipse.adt 4 0 2014-11-11 16:14:25.873
!MESSAGE control_layout.xml: Could not initialize class android.graphics.Typeface
!STACK 0
java.lang.NoClassDefFoundError: Could not initialize class android.graphics.Typeface
	at android.graphics.Paint_Delegate.reset(Paint_Delegate.java:1146)
	at android.graphics.Paint_Delegate.<init>(Paint_Delegate.java:1108)
	at android.graphics.Paint_Delegate.native_init(Paint_Delegate.java:674)
	at android.graphics.Paint.native_init(Paint.java)
	at android.graphics.Paint.<init>(Paint.java:430)
	at android.graphics.Paint.<init>(Paint.java:420)
	at android.widget.TextView.<clinit>(TextView.java:594)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
	at android.view.LayoutInflater.createView(LayoutInflater.java:607)
	at android.view.BridgeInflater.onCreateView(BridgeInflater.java:82)
	at android.view.LayoutInflater.onCreateView(LayoutInflater.java:682)
	at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:741)
	at android.view.BridgeInflater.createViewFromTag(BridgeInflater.java:128)
	at android.view.LayoutInflater.rInflate_Original(LayoutInflater.java:806)
	at android.view.LayoutInflater_Delegate.rInflate(LayoutInflater_Delegate.java:64)
	at android.view.LayoutInflater.rInflate(LayoutInflater.java:782)
	at android.view.LayoutInflater.inflate(LayoutInflater.java:479)
	at com.android.layoutlib.bridge.bars.CustomBar.<init>(CustomBar.java:87)
	at com.android.layoutlib.bridge.bars.StatusBar.<init>(StatusBar.java:47)
	at com.android.layoutlib.bridge.impl.RenderSessionImpl.createStatusBar(RenderSessionImpl.java:1584)
	at com.android.layoutlib.bridge.impl.RenderSessionImpl.inflate(RenderSessionImpl.java:335)
	at com.android.layoutlib.bridge.Bridge.createSession(Bridge.java:329)
	at com.android.ide.common.rendering.LayoutLibrary.createSession(LayoutLibrary.java:332)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.RenderService.createRenderSession(RenderService.java:517)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart.renderWithBridge(GraphicalEditorPart.java:1584)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart.recomputeLayout(GraphicalEditorPart.java:1309)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart.changed(GraphicalEditorPart.java:725)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart.onTargetChange(GraphicalEditorPart.java:1196)
	at com.android.ide.eclipse.adt.internal.editors.layout.LayoutEditorDelegate.onDescriptorsChanged(LayoutEditorDelegate.java:916)
	at com.android.ide.eclipse.adt.internal.editors.layout.LayoutEditorDelegate.delegateInitUiRootNode(LayoutEditorDelegate.java:835)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart$TargetListener.updateEditor(GraphicalEditorPart.java:953)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart$TargetListener.onTargetLoaded(GraphicalEditorPart.java:917)
	at com.android.ide.eclipse.adt.AdtPlugin$11.run(AdtPlugin.java:1749)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3946)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3623)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)

!ENTRY com.android.ide.eclipse.adt 4 0 2014-11-11 16:14:39.183
!MESSAGE Unknown exception in parseSdkContent.
!STACK 0
java.lang.NoClassDefFoundError: Could not initialize class android.graphics.Typeface
	at android.graphics.Typeface_Accessor.resetDefaults(Typeface_Accessor.java:25)
	at com.android.layoutlib.bridge.Bridge.dispose(Bridge.java:306)
	at com.android.ide.common.rendering.LayoutLibrary.dispose(LayoutLibrary.java:312)
	at com.android.ide.eclipse.adt.internal.sdk.AndroidTargetData.dispose(AndroidTargetData.java:414)
	at com.android.ide.eclipse.adt.internal.sdk.Sdk.dispose(Sdk.java:964)
	at com.android.ide.eclipse.adt.internal.sdk.Sdk.loadSdk(Sdk.java:238)
	at com.android.ide.eclipse.adt.AdtPlugin$7.run(AdtPlugin.java:1415)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY com.android.ide.eclipse.adt 4 0 2014-11-11 16:14:39.183
!MESSAGE parseSdkContent failed
!STACK 0
java.lang.NoClassDefFoundError: Could not initialize class android.graphics.Typeface
	at android.graphics.Typeface_Accessor.resetDefaults(Typeface_Accessor.java:25)
	at com.android.layoutlib.bridge.Bridge.dispose(Bridge.java:306)
	at com.android.ide.common.rendering.LayoutLibrary.dispose(LayoutLibrary.java:312)
	at com.android.ide.eclipse.adt.internal.sdk.AndroidTargetData.dispose(AndroidTargetData.java:414)
	at com.android.ide.eclipse.adt.internal.sdk.Sdk.dispose(Sdk.java:964)
	at com.android.ide.eclipse.adt.internal.sdk.Sdk.loadSdk(Sdk.java:238)
	at com.android.ide.eclipse.adt.AdtPlugin$7.run(AdtPlugin.java:1415)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY com.android.ide.eclipse.adt 4 0 2014-11-11 16:14:39.184
!MESSAGE Unknown exception in parseSdkContent.
!STACK 0
java.lang.NoClassDefFoundError: Could not initialize class android.graphics.Typeface
	at android.graphics.Typeface_Accessor.resetDefaults(Typeface_Accessor.java:25)
	at com.android.layoutlib.bridge.Bridge.dispose(Bridge.java:306)
	at com.android.ide.common.rendering.LayoutLibrary.dispose(LayoutLibrary.java:312)
	at com.android.ide.eclipse.adt.internal.sdk.AndroidTargetData.dispose(AndroidTargetData.java:414)
	at com.android.ide.eclipse.adt.internal.sdk.Sdk.dispose(Sdk.java:964)
	at com.android.ide.eclipse.adt.internal.sdk.Sdk.loadSdk(Sdk.java:238)
	at com.android.ide.eclipse.adt.AdtPlugin$7.run(AdtPlugin.java:1415)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY com.android.ide.eclipse.adt 4 0 2014-11-11 16:14:39.184
!MESSAGE parseSdkContent failed
!STACK 0
java.lang.NoClassDefFoundError: Could not initialize class android.graphics.Typeface
	at android.graphics.Typeface_Accessor.resetDefaults(Typeface_Accessor.java:25)
	at com.android.layoutlib.bridge.Bridge.dispose(Bridge.java:306)
	at com.android.ide.common.rendering.LayoutLibrary.dispose(LayoutLibrary.java:312)
	at com.android.ide.eclipse.adt.internal.sdk.AndroidTargetData.dispose(AndroidTargetData.java:414)
	at com.android.ide.eclipse.adt.internal.sdk.Sdk.dispose(Sdk.java:964)
	at com.android.ide.eclipse.adt.internal.sdk.Sdk.loadSdk(Sdk.java:238)
	at com.android.ide.eclipse.adt.AdtPlugin$7.run(AdtPlugin.java:1415)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY com.android.ide.eclipse.adt 4 0 2014-11-11 16:14:39.279
!MESSAGE control_layout.xml: Could not initialize class android.widget.TextView
!STACK 0
java.lang.NoClassDefFoundError: Could not initialize class android.widget.TextView
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
	at android.view.LayoutInflater.createView(LayoutInflater.java:607)
	at android.view.BridgeInflater.onCreateView(BridgeInflater.java:82)
	at android.view.LayoutInflater.onCreateView(LayoutInflater.java:682)
	at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:741)
	at android.view.BridgeInflater.createViewFromTag(BridgeInflater.java:128)
	at android.view.LayoutInflater.rInflate_Original(LayoutInflater.java:806)
	at android.view.LayoutInflater_Delegate.rInflate(LayoutInflater_Delegate.java:64)
	at android.view.LayoutInflater.rInflate(LayoutInflater.java:782)
	at android.view.LayoutInflater.inflate(LayoutInflater.java:479)
	at com.android.layoutlib.bridge.bars.CustomBar.<init>(CustomBar.java:87)
	at com.android.layoutlib.bridge.bars.StatusBar.<init>(StatusBar.java:47)
	at com.android.layoutlib.bridge.impl.RenderSessionImpl.createStatusBar(RenderSessionImpl.java:1584)
	at com.android.layoutlib.bridge.impl.RenderSessionImpl.inflate(RenderSessionImpl.java:335)
	at com.android.layoutlib.bridge.Bridge.createSession(Bridge.java:329)
	at com.android.ide.common.rendering.LayoutLibrary.createSession(LayoutLibrary.java:332)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.RenderService.createRenderSession(RenderService.java:517)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart.renderWithBridge(GraphicalEditorPart.java:1584)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart.recomputeLayout(GraphicalEditorPart.java:1309)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart.activated(GraphicalEditorPart.java:1066)
	at com.android.ide.eclipse.adt.internal.editors.layout.LayoutEditorDelegate.delegatePageChange(LayoutEditorDelegate.java:686)
	at com.android.ide.eclipse.adt.internal.editors.common.CommonXmlEditor.pageChange(CommonXmlEditor.java:360)
	at org.eclipse.ui.part.MultiPageEditorPart.setActivePage(MultiPageEditorPart.java:1083)
	at org.eclipse.ui.forms.editor.FormEditor.setActivePage(FormEditor.java:607)
	at com.android.ide.eclipse.adt.internal.editors.AndroidXmlEditor.selectDefaultPage(AndroidXmlEditor.java:450)
	at com.android.ide.eclipse.adt.internal.editors.AndroidXmlEditor.addPages(AndroidXmlEditor.java:311)
	at com.android.ide.eclipse.adt.internal.editors.common.CommonXmlEditor.addPages(CommonXmlEditor.java:285)
	at org.eclipse.ui.forms.editor.FormEditor.createPages(FormEditor.java:138)
	at org.eclipse.ui.part.MultiPageEditorPart.createPartControl(MultiPageEditorPart.java:358)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.createPartControl(CompatibilityPart.java:138)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityEditor.createPartControl(CompatibilityEditor.java:96)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:313)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:861)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:841)
	at org.eclipse.e4.core.internal.di.InjectorImpl.inject(InjectorImpl.java:113)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:321)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:242)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:161)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:102)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:71)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:53)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:141)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:894)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:731)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.access$2(PartRenderingEngine.java:702)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$7.run(PartRenderingEngine.java:696)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:681)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showTab(StackRenderer.java:1115)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer$1.handleEvent(LazyStackRenderer.java:67)
	at org.eclipse.e4.ui.services.internal.events.UIEventHandler$1.run(UIEventHandler.java:41)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:180)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:150)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4607)
	at org.eclipse.e4.ui.internal.workbench.swt.E4Application$1.syncExec(E4Application.java:187)
	at org.eclipse.e4.ui.services.internal.events.UIEventHandler.handleEvent(UIEventHandler.java:38)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:197)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:197)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:230)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:148)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:135)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:78)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:39)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:80)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:58)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:374)
	at org.eclipse.e4.ui.model.application.ui.impl.ElementContainerImpl.setSelectedElement(ElementContainerImpl.java:171)
	at org.eclipse.e4.ui.internal.workbench.ModelServiceImpl.showElementInWindow(ModelServiceImpl.java:422)
	at org.eclipse.e4.ui.internal.workbench.ModelServiceImpl.bringToTop(ModelServiceImpl.java:389)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.delegateBringToTop(PartServiceImpl.java:606)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.bringToTop(PartServiceImpl.java:332)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.showPart(PartServiceImpl.java:1029)
	at org.eclipse.ui.internal.WorkbenchPage.busyOpenEditor(WorkbenchPage.java:3047)
	at org.eclipse.ui.internal.WorkbenchPage.access$22(WorkbenchPage.java:2969)
	at org.eclipse.ui.internal.WorkbenchPage$8.run(WorkbenchPage.java:2951)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2947)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2911)
	at org.eclipse.ui.internal.WorkbenchPage.openEditor(WorkbenchPage.java:2902)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:655)
	at org.eclipse.ui.ide.IDE.openEditor(IDE.java:614)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:360)
	at org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(EditorUtility.java:167)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:249)
	at org.eclipse.jdt.ui.actions.OpenAction.run(OpenAction.java:228)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:275)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:251)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerActionGroup.handleOpen(PackageExplorerActionGroup.java:376)
	at org.eclipse.jdt.internal.ui.packageview.PackageExplorerPart$4.open(PackageExplorerPart.java:538)
	at org.eclipse.ui.OpenAndLinkWithEditorHelper$InternalListener.open(OpenAndLinkWithEditorHelper.java:48)
	at org.eclipse.jface.viewers.StructuredViewer$2.run(StructuredViewer.java:866)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:49)
	at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
	at org.eclipse.jface.viewers.StructuredViewer.fireOpen(StructuredViewer.java:864)
	at org.eclipse.jface.viewers.StructuredViewer.handleOpen(StructuredViewer.java:1152)
	at org.eclipse.jface.viewers.StructuredViewer$6.handleOpen(StructuredViewer.java:1256)
	at org.eclipse.jface.util.OpenStrategy.fireOpenEvent(OpenStrategy.java:275)
	at org.eclipse.jface.util.OpenStrategy.access$2(OpenStrategy.java:269)
	at org.eclipse.jface.util.OpenStrategy$1.handleEvent(OpenStrategy.java:309)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4136)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1458)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1481)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1466)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1271)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3982)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3621)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)

!ENTRY com.android.ide.eclipse.adt 4 0 2014-11-11 16:16:28.259
!MESSAGE Unknown exception in parseSdkContent.
!STACK 0
java.lang.NoClassDefFoundError: Could not initialize class android.graphics.Typeface
	at android.graphics.Typeface_Accessor.resetDefaults(Typeface_Accessor.java:25)
	at com.android.layoutlib.bridge.Bridge.dispose(Bridge.java:306)
	at com.android.ide.common.rendering.LayoutLibrary.dispose(LayoutLibrary.java:312)
	at com.android.ide.eclipse.adt.internal.sdk.AndroidTargetData.dispose(AndroidTargetData.java:414)
	at com.android.ide.eclipse.adt.internal.sdk.Sdk.dispose(Sdk.java:964)
	at com.android.ide.eclipse.adt.internal.sdk.Sdk.loadSdk(Sdk.java:238)
	at com.android.ide.eclipse.adt.AdtPlugin$7.run(AdtPlugin.java:1415)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY com.android.ide.eclipse.adt 4 0 2014-11-11 16:16:28.260
!MESSAGE parseSdkContent failed
!STACK 0
java.lang.NoClassDefFoundError: Could not initialize class android.graphics.Typeface
	at android.graphics.Typeface_Accessor.resetDefaults(Typeface_Accessor.java:25)
	at com.android.layoutlib.bridge.Bridge.dispose(Bridge.java:306)
	at com.android.ide.common.rendering.LayoutLibrary.dispose(LayoutLibrary.java:312)
	at com.android.ide.eclipse.adt.internal.sdk.AndroidTargetData.dispose(AndroidTargetData.java:414)
	at com.android.ide.eclipse.adt.internal.sdk.Sdk.dispose(Sdk.java:964)
	at com.android.ide.eclipse.adt.internal.sdk.Sdk.loadSdk(Sdk.java:238)
	at com.android.ide.eclipse.adt.AdtPlugin$7.run(AdtPlugin.java:1415)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)
!SESSION 2014-11-11 16:17:03.857 -----------------------------------------------
eclipse.buildId=M20130204-1200
java.version=1.8.0_25
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product com.android.ide.eclipse.adt.package.adtproduct -keyring /Users/jorgeguerra/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product com.android.ide.eclipse.adt.package.adtproduct -keyring /Users/jorgeguerra/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2014-11-11 16:17:08.750
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.ui 2 2 2014-11-11 16:17:34.502
!MESSAGE Invalid property category path: ValidationPropertiesPage (bundle: org.eclipse.wst.xml.ui, propertyPage: org.eclipse.wst.xml.ui.propertyPage.project.validation)

!ENTRY org.eclipse.jface 2 0 2014-11-11 16:22:52.669
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 16:22:52.669
!MESSAGE A conflict occurred for COMMAND+/:
Binding(COMMAND+/,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.toggle.comment,Toggle Comment,
		Toggle comment the selected lines,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@29e7da9c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+/,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.add.block.comment,Add Block Comment,
		Add Block Comment,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@16a9eb2e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 16:22:52.669
!MESSAGE A conflict occurred for COMMAND+O:
Binding(COMMAND+O,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.show.outline,Quick Outline,
		Show the quick outline for the editor input,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@58e142be,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+O,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.quick_outline,Quick Outline,
		Show the quick outline for the editor input,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@3095f1eb,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 16:22:52.669
!MESSAGE A conflict occurred for COMMAND+SHIFT+P:
Binding(COMMAND+SHIFT+P,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.goto.matching.bracket,Go to Matching Bracket,
		Moves the cursor to the matching bracket,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@5225e766,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+SHIFT+P,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.goto.matching.bracket,Matching Bracket,
		Go to Matching Bracket,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@41853299,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 16:22:52.669
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_LEFT:
Binding(CTRL+SHIFT+ARROW_LEFT,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.previous,Select Previous Element,
		Expand selection to include previous sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@4501e484,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_LEFT,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.previous,Select Previous Element,
		Expand selection to include previous sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@3f50b680,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 16:22:52.669
!MESSAGE A conflict occurred for COMMAND+SHIFT+F:
Binding(COMMAND+SHIFT+F,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.format,Format,
		Format the selected text,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@1727aa28,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+SHIFT+F,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.format.document,Format,
		Format selection,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@7d904ff1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 16:22:52.669
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_RIGHT:
Binding(CTRL+SHIFT+ARROW_RIGHT,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.next,Select Next Element,
		Expand selection to include next sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@5a75ec37,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_RIGHT,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.next,Select Next Element,
		Expand selection to include next sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@8a20b8e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 16:22:52.669
!MESSAGE A conflict occurred for COMMAND+SHIFT+C:
Binding(COMMAND+SHIFT+C,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.toggle.comment,Toggle Comment,
		Toggle comment the selected lines,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@29e7da9c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+SHIFT+C,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.toggle.comment,Toggle Comment,
		Toggle Comment,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@22752544,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 16:22:52.669
!MESSAGE A conflict occurred for COMMAND+I:
Binding(COMMAND+I,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.indent,Correct Indentation,
		Corrects the indentation of the selected lines,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@75c1c32b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+I,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.format.active.elements,Format Active Elements,
		Format active elements,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@7f37b6d9,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
Binding(COMMAND+I,
	ParameterizedCommand(Command(org.eclipse.ui.file.properties,Properties,
		Display the properties of the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@60783105,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 16:22:52.669
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_UP:
Binding(CTRL+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.wst.xml.ui.previousSibling,Previous Sibling,
		Go to Previous Sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@32b0876c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.enclosing,Select Enclosing Element,
		Expand selection to include enclosing element,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@20f6f88c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.core.runtime.xml,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.enclosing,Select Enclosing Element,
		Expand selection to include enclosing element,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@3fae2cd3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 16:22:52.669
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_DOWN:
Binding(CTRL+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.last,Restore Last Selection,
		Restore last selection,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@1572b7e4,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.last,Restore Last Selection,
		Restore last selection,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@7d78f3d5,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.core.runtime.xml,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.wst.xml.ui.nextSibling,Next Sibling,
		Go to Next Sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@306f6f1d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 16:22:52.669
!MESSAGE A conflict occurred for COMMAND+SHIFT+\:
Binding(COMMAND+SHIFT+\,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.remove.block.comment,Remove Block Comment,
		Remove the block comment enclosing the selection,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@d9420bf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+SHIFT+\,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.remove.block.comment,Remove Block Comment,
		Remove Block Comment,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@43a65cd8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)

!ENTRY com.android.ide.eclipse.adt 2 0 2014-11-11 17:29:47.148
!MESSAGE control_layout.xml: Couldn't resolve resource @string/YAxis

!ENTRY com.android.ide.eclipse.adt 2 0 2014-11-11 17:29:47.150
!MESSAGE control_layout.xml: Couldn't resolve resource @string/XAxis

!ENTRY com.android.ide.eclipse.adt 2 0 2014-11-11 17:29:47.151
!MESSAGE control_layout.xml: Couldn't resolve resource @string/ZAxis

!ENTRY com.android.ide.eclipse.adt 4 0 2014-11-11 17:35:27.732
!MESSAGE Unknown exception in parseSdkContent.
!STACK 0
java.lang.ExceptionInInitializerError
	at android.graphics.Typeface_Accessor.resetDefaults(Typeface_Accessor.java:25)
	at com.android.layoutlib.bridge.Bridge.dispose(Bridge.java:306)
	at com.android.ide.common.rendering.LayoutLibrary.dispose(LayoutLibrary.java:312)
	at com.android.ide.eclipse.adt.internal.sdk.AndroidTargetData.dispose(AndroidTargetData.java:414)
	at com.android.ide.eclipse.adt.internal.sdk.Sdk.dispose(Sdk.java:964)
	at com.android.ide.eclipse.adt.internal.sdk.Sdk.loadSdk(Sdk.java:238)
	at com.android.ide.eclipse.adt.AdtPlugin$7.run(AdtPlugin.java:1415)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)
Caused by: java.lang.NullPointerException
	at java.io.File.<init>(File.java:277)
	at android.graphics.Typeface_Delegate.getSystemFontConfigLocation(Typeface_Delegate.java:196)
	at android.graphics.Typeface.getSystemFontConfigLocation(Typeface.java:354)
	at android.graphics.Typeface.init(Typeface.java:277)
	at android.graphics.Typeface.<clinit>(Typeface.java:336)
	... 8 more

!ENTRY com.android.ide.eclipse.adt 4 0 2014-11-11 17:35:27.734
!MESSAGE parseSdkContent failed
!STACK 0
java.lang.ExceptionInInitializerError
	at android.graphics.Typeface_Accessor.resetDefaults(Typeface_Accessor.java:25)
	at com.android.layoutlib.bridge.Bridge.dispose(Bridge.java:306)
	at com.android.ide.common.rendering.LayoutLibrary.dispose(LayoutLibrary.java:312)
	at com.android.ide.eclipse.adt.internal.sdk.AndroidTargetData.dispose(AndroidTargetData.java:414)
	at com.android.ide.eclipse.adt.internal.sdk.Sdk.dispose(Sdk.java:964)
	at com.android.ide.eclipse.adt.internal.sdk.Sdk.loadSdk(Sdk.java:238)
	at com.android.ide.eclipse.adt.AdtPlugin$7.run(AdtPlugin.java:1415)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)
Caused by: java.lang.NullPointerException
	at java.io.File.<init>(File.java:277)
	at android.graphics.Typeface_Delegate.getSystemFontConfigLocation(Typeface_Delegate.java:196)
	at android.graphics.Typeface.getSystemFontConfigLocation(Typeface.java:354)
	at android.graphics.Typeface.init(Typeface.java:277)
	at android.graphics.Typeface.<clinit>(Typeface.java:336)
	... 8 more

!ENTRY com.android.ide.eclipse.adt 4 0 2014-11-11 17:35:27.933
!MESSAGE control_layout.xml: Could not initialize class android.graphics.Typeface
!STACK 0
java.lang.NoClassDefFoundError: Could not initialize class android.graphics.Typeface
	at android.graphics.Paint_Delegate.reset(Paint_Delegate.java:1146)
	at android.graphics.Paint_Delegate.<init>(Paint_Delegate.java:1108)
	at android.graphics.Paint_Delegate.native_init(Paint_Delegate.java:674)
	at android.graphics.Paint.native_init(Paint.java)
	at android.graphics.Paint.<init>(Paint.java:430)
	at android.graphics.Paint.<init>(Paint.java:420)
	at android.widget.TextView.<clinit>(TextView.java:594)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
	at android.view.LayoutInflater.createView(LayoutInflater.java:607)
	at android.view.BridgeInflater.onCreateView(BridgeInflater.java:82)
	at android.view.LayoutInflater.onCreateView(LayoutInflater.java:682)
	at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:741)
	at android.view.BridgeInflater.createViewFromTag(BridgeInflater.java:128)
	at android.view.LayoutInflater.rInflate_Original(LayoutInflater.java:806)
	at android.view.LayoutInflater_Delegate.rInflate(LayoutInflater_Delegate.java:64)
	at android.view.LayoutInflater.rInflate(LayoutInflater.java:782)
	at android.view.LayoutInflater.inflate(LayoutInflater.java:479)
	at com.android.layoutlib.bridge.bars.CustomBar.<init>(CustomBar.java:87)
	at com.android.layoutlib.bridge.bars.StatusBar.<init>(StatusBar.java:47)
	at com.android.layoutlib.bridge.impl.RenderSessionImpl.createStatusBar(RenderSessionImpl.java:1584)
	at com.android.layoutlib.bridge.impl.RenderSessionImpl.inflate(RenderSessionImpl.java:335)
	at com.android.layoutlib.bridge.Bridge.createSession(Bridge.java:329)
	at com.android.ide.common.rendering.LayoutLibrary.createSession(LayoutLibrary.java:332)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.RenderService.createRenderSession(RenderService.java:517)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart.renderWithBridge(GraphicalEditorPart.java:1584)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart.recomputeLayout(GraphicalEditorPart.java:1309)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart.changed(GraphicalEditorPart.java:725)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart.onTargetChange(GraphicalEditorPart.java:1196)
	at com.android.ide.eclipse.adt.internal.editors.layout.LayoutEditorDelegate.onDescriptorsChanged(LayoutEditorDelegate.java:916)
	at com.android.ide.eclipse.adt.internal.editors.layout.LayoutEditorDelegate.delegateInitUiRootNode(LayoutEditorDelegate.java:835)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart$TargetListener.updateEditor(GraphicalEditorPart.java:953)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart$TargetListener.onTargetLoaded(GraphicalEditorPart.java:917)
	at com.android.ide.eclipse.adt.AdtPlugin$11.run(AdtPlugin.java:1749)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3946)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3623)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)

!ENTRY com.android.ide.eclipse.adt 4 0 2014-11-11 17:35:27.981
!MESSAGE main.xml: android.widget.TextView
!STACK 0
java.lang.NoClassDefFoundError: android.widget.TextView
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:2663)
	at java.lang.Class.getConstructor0(Class.java:3067)
	at java.lang.Class.getConstructor(Class.java:1817)
	at android.view.LayoutInflater.createView(LayoutInflater.java:580)
	at android.view.LayoutInflater.onCreateView(LayoutInflater.java:665)
	at android.view.BridgeInflater.onCreateView(BridgeInflater.java:95)
	at android.view.LayoutInflater.onCreateView(LayoutInflater.java:682)
	at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:741)
	at android.view.BridgeInflater.createViewFromTag(BridgeInflater.java:128)
	at android.view.LayoutInflater.rInflate_Original(LayoutInflater.java:806)
	at android.view.LayoutInflater_Delegate.rInflate(LayoutInflater_Delegate.java:64)
	at android.view.LayoutInflater.rInflate(LayoutInflater.java:782)
	at android.view.LayoutInflater.inflate(LayoutInflater.java:504)
	at android.view.LayoutInflater.inflate(LayoutInflater.java:385)
	at com.android.layoutlib.bridge.impl.RenderSessionImpl.inflate(RenderSessionImpl.java:401)
	at com.android.layoutlib.bridge.Bridge.createSession(Bridge.java:329)
	at com.android.ide.common.rendering.LayoutLibrary.createSession(LayoutLibrary.java:332)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.RenderService.createRenderSession(RenderService.java:517)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart.renderWithBridge(GraphicalEditorPart.java:1584)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart.recomputeLayout(GraphicalEditorPart.java:1309)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart.changed(GraphicalEditorPart.java:725)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart.onTargetChange(GraphicalEditorPart.java:1196)
	at com.android.ide.eclipse.adt.internal.editors.layout.LayoutEditorDelegate.onDescriptorsChanged(LayoutEditorDelegate.java:916)
	at com.android.ide.eclipse.adt.internal.editors.layout.LayoutEditorDelegate.delegateInitUiRootNode(LayoutEditorDelegate.java:835)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart$TargetListener.updateEditor(GraphicalEditorPart.java:953)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart$TargetListener.onTargetLoaded(GraphicalEditorPart.java:917)
	at com.android.ide.eclipse.adt.AdtPlugin$11.run(AdtPlugin.java:1749)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3946)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3623)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)

!ENTRY com.android.ide.eclipse.adt 4 0 2014-11-11 17:35:33.589
!MESSAGE main.xml: android.widget.TextView
!STACK 0
java.lang.NoClassDefFoundError: android.widget.TextView
	at java.lang.Class.getDeclaredConstructors0(Native Method)
	at java.lang.Class.privateGetDeclaredConstructors(Class.java:2663)
	at java.lang.Class.getConstructor0(Class.java:3067)
	at java.lang.Class.getConstructor(Class.java:1817)
	at android.view.LayoutInflater.createView(LayoutInflater.java:580)
	at android.view.LayoutInflater.onCreateView(LayoutInflater.java:665)
	at android.view.BridgeInflater.onCreateView(BridgeInflater.java:95)
	at android.view.LayoutInflater.onCreateView(LayoutInflater.java:682)
	at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:741)
	at android.view.BridgeInflater.createViewFromTag(BridgeInflater.java:128)
	at android.view.LayoutInflater.rInflate_Original(LayoutInflater.java:806)
	at android.view.LayoutInflater_Delegate.rInflate(LayoutInflater_Delegate.java:64)
	at android.view.LayoutInflater.rInflate(LayoutInflater.java:782)
	at android.view.LayoutInflater.inflate(LayoutInflater.java:504)
	at android.view.LayoutInflater.inflate(LayoutInflater.java:385)
	at com.android.layoutlib.bridge.impl.RenderSessionImpl.inflate(RenderSessionImpl.java:401)
	at com.android.layoutlib.bridge.Bridge.createSession(Bridge.java:329)
	at com.android.ide.common.rendering.LayoutLibrary.createSession(LayoutLibrary.java:332)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.RenderService.createRenderSession(RenderService.java:517)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart.renderWithBridge(GraphicalEditorPart.java:1584)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart.recomputeLayout(GraphicalEditorPart.java:1309)
	at com.android.ide.eclipse.adt.internal.editors.layout.gle2.GraphicalEditorPart.changed(GraphicalEditorPart.java:725)
	at com.android.ide.eclipse.adt.internal.editors.layout.configuration.ConfigurationChooser.onDeviceConfigChange(ConfigurationChooser.java:1502)
	at com.android.ide.eclipse.adt.internal.editors.layout.configuration.OrientationMenuAction$DeviceConfigAction.run(OrientationMenuAction.java:177)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:584)
	at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:501)
	at org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:411)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4136)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1458)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1481)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1466)
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:1271)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3982)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3621)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)
!SESSION 2014-11-11 17:35:56.050 -----------------------------------------------
eclipse.buildId=M20130204-1200
java.version=1.8.0_25
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product com.android.ide.eclipse.adt.package.adtproduct -keyring /Users/jorgeguerra/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product com.android.ide.eclipse.adt.package.adtproduct -keyring /Users/jorgeguerra/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2014-11-11 17:36:00.291
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY com.android.ide.eclipse.adt 4 0 2014-11-11 17:36:12.529
!MESSAGE loadAndParseRClass failed to find class android.support.v7.appcompat.R
!STACK 0
java.lang.NoClassDefFoundError: android/support/v7/appcompat/R$anim
	at java.lang.Class.getDeclaredClasses0(Native Method)
	at java.lang.Class.getDeclaredClasses(Class.java:1859)
	at com.android.ide.eclipse.adt.internal.resources.manager.CompiledResourcesMonitor.parseClass(CompiledResourcesMonitor.java:259)
	at com.android.ide.eclipse.adt.internal.resources.manager.CompiledResourcesMonitor.loadAndParseRClass(CompiledResourcesMonitor.java:229)
	at com.android.ide.eclipse.adt.internal.resources.manager.CompiledResourcesMonitor.fileChanged(CompiledResourcesMonitor.java:108)
	at com.android.ide.eclipse.adt.internal.resources.manager.GlobalProjectMonitor$DeltaVisitor.visit(GlobalProjectMonitor.java:233)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:69)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:80)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:80)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:80)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:80)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:80)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:80)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:80)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:80)
	at org.eclipse.core.internal.events.ResourceDelta.accept(ResourceDelta.java:49)
	at com.android.ide.eclipse.adt.internal.resources.manager.GlobalProjectMonitor$1.resourceChanged(GlobalProjectMonitor.java:537)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:291)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:285)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:149)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:395)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1530)
	at org.eclipse.core.internal.resources.File.create(File.java:174)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.writeClassFileContents(AbstractImageBuilder.java:878)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.writeClassFile(AbstractImageBuilder.java:857)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.acceptResult(AbstractImageBuilder.java:188)
	at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:510)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:365)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.compile(BatchImageBuilder.java:178)
	at org.eclipse.jdt.internal.core.builder.AbstractImageBuilder.compile(AbstractImageBuilder.java:302)
	at org.eclipse.jdt.internal.core.builder.BatchImageBuilder.build(BatchImageBuilder.java:60)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.buildAll(JavaBuilder.java:254)
	at org.eclipse.jdt.internal.core.builder.JavaBuilder.build(JavaBuilder.java:184)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:726)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:199)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:239)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:292)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:295)
	at org.eclipse.core.internal.events.BuildManager.basicBuildLoop(BuildManager.java:351)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:374)
	at org.eclipse.core.internal.events.AutoBuildJob.doBuild(AutoBuildJob.java:143)
	at org.eclipse.core.internal.events.AutoBuildJob.run(AutoBuildJob.java:241)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)
Caused by: java.lang.ClassNotFoundException: android.support.v7.appcompat.R$anim
	at com.android.ide.eclipse.adt.internal.resources.manager.ProjectClassLoader.findClass(ProjectClassLoader.java:109)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 46 more

!ENTRY com.android.ide.eclipse.adt 2 0 2014-11-11 17:37:42.884
!MESSAGE control_layout.xml: Couldn't resolve resource @string/empty

!ENTRY com.android.ide.eclipse.adt 2 0 2014-11-11 17:38:00.718
!MESSAGE control_layout.xml: Couldn't resolve resource @string/empty

!ENTRY org.eclipse.jface 2 0 2014-11-11 17:39:51.715
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 17:39:51.715
!MESSAGE A conflict occurred for COMMAND+SHIFT+F:
Binding(COMMAND+SHIFT+F,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.format,Format,
		Format the selected text,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@46916d68,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+SHIFT+F,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.format.document,Format,
		Format selection,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@534e58b6,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 17:39:51.715
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_RIGHT:
Binding(CTRL+SHIFT+ARROW_RIGHT,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.next,Select Next Element,
		Expand selection to include next sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@5b7c8930,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_RIGHT,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.next,Select Next Element,
		Expand selection to include next sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@79b07ccd,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 17:39:51.715
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_LEFT:
Binding(CTRL+SHIFT+ARROW_LEFT,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.previous,Select Previous Element,
		Expand selection to include previous sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@7ad31e9e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_LEFT,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.previous,Select Previous Element,
		Expand selection to include previous sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@63dfada0,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 17:39:51.715
!MESSAGE A conflict occurred for COMMAND+O:
Binding(COMMAND+O,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.show.outline,Quick Outline,
		Show the quick outline for the editor input,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@78c7d992,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+O,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.quick_outline,Quick Outline,
		Show the quick outline for the editor input,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@35f011cf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 17:39:51.715
!MESSAGE A conflict occurred for COMMAND+SHIFT+C:
Binding(COMMAND+SHIFT+C,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.toggle.comment,Toggle Comment,
		Toggle comment the selected lines,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@4f5c55a8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+SHIFT+C,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.toggle.comment,Toggle Comment,
		Toggle Comment,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@376c7d7d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 17:39:51.715
!MESSAGE A conflict occurred for COMMAND+I:
Binding(COMMAND+I,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.indent,Correct Indentation,
		Corrects the indentation of the selected lines,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@2d198533,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+I,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.format.active.elements,Format Active Elements,
		Format active elements,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@503df2d0,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
Binding(COMMAND+I,
	ParameterizedCommand(Command(org.eclipse.ui.file.properties,Properties,
		Display the properties of the selected item,
		Category(org.eclipse.ui.category.file,File,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@2a3194c6,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 17:39:51.715
!MESSAGE A conflict occurred for COMMAND+/:
Binding(COMMAND+/,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.toggle.comment,Toggle Comment,
		Toggle comment the selected lines,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@4f5c55a8,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+/,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.add.block.comment,Add Block Comment,
		Add Block Comment,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@5434e40c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 17:39:51.715
!MESSAGE A conflict occurred for COMMAND+SHIFT+P:
Binding(COMMAND+SHIFT+P,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.goto.matching.bracket,Go to Matching Bracket,
		Moves the cursor to the matching bracket,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@6bd4d24b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+SHIFT+P,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.goto.matching.bracket,Matching Bracket,
		Go to Matching Bracket,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@4f0cab0a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 17:39:51.715
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_UP:
Binding(CTRL+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.wst.xml.ui.previousSibling,Previous Sibling,
		Go to Previous Sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@11c3ff67,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.enclosing,Select Enclosing Element,
		Expand selection to include enclosing element,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@22ebccb9,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.core.runtime.xml,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_UP,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.enclosing,Select Enclosing Element,
		Expand selection to include enclosing element,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@5e1fc897,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 17:39:51.715
!MESSAGE A conflict occurred for CTRL+SHIFT+ARROW_DOWN:
Binding(CTRL+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.select.last,Restore Last Selection,
		Restore last selection,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@73c337e9,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.structure.select.last,Restore Last Selection,
		Restore last selection,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@71926a36,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.core.runtime.xml,,cocoa,system)
Binding(CTRL+SHIFT+ARROW_DOWN,
	ParameterizedCommand(Command(org.eclipse.wst.xml.ui.nextSibling,Next Sibling,
		Go to Next Sibling,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@7da39774,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,cocoa,system)
!SUBENTRY 1 org.eclipse.jface 2 0 2014-11-11 17:39:51.715
!MESSAGE A conflict occurred for COMMAND+SHIFT+\:
Binding(COMMAND+SHIFT+\,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.edit.text.java.remove.block.comment,Remove Block Comment,
		Remove the block comment enclosing the selection,
		Category(org.eclipse.jdt.ui.category.source,Source,Java Source Actions,true),
		org.eclipse.ui.internal.MakeHandlersGo@129204bf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.jdt.ui.javaEditorScope,,,system)
Binding(COMMAND+SHIFT+\,
	ParameterizedCommand(Command(org.eclipse.wst.sse.ui.remove.block.comment,Remove Block Comment,
		Remove Block Comment,
		Category(org.eclipse.ui.category.edit,Edit,null,true),
		org.eclipse.ui.internal.MakeHandlersGo@4e682398,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.wst.sse.ui.structuredTextEditorScope,,,system)

!ENTRY org.eclipse.ui 2 2 2014-11-11 17:43:01.201
!MESSAGE Invalid property category path: ValidationPropertiesPage (bundle: org.eclipse.wst.xml.ui, propertyPage: org.eclipse.wst.xml.ui.propertyPage.project.validation)
!SESSION 2014-11-13 17:33:40.226 -----------------------------------------------
eclipse.buildId=M20130204-1200
java.version=1.8.0_25
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=en_US
Framework arguments:  -product com.android.ide.eclipse.adt.package.adtproduct -keyring /Users/jorgeguerra/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product com.android.ide.eclipse.adt.package.adtproduct -keyring /Users/jorgeguerra/.eclipse_keyring -showlocation

!ENTRY org.eclipse.core.net 1 0 2014-11-13 17:33:45.158
!MESSAGE System property http.nonProxyHosts has been set to local|*.local|169.254/16|*.169.254/16 by an external source. This value will be overwritten using the values from the preferences

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:51:05.253
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;


public class LoadAppDeadlyWheel extends Activity {
	
TextView textView1;
	
	static String SERVER_IP;
	static final int SERVER_PORT = 10002;
	
	Handler handler = new Handler();
	ServerSocket serverSocket;

	//---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface.getNetworkInterfaces(); networkInterfaceEnum.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum.nextElement();
					
					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()&& InetAddressUtils.isIPv4Address(inetAddress.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}
	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(), Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}
	
	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon =new ServiceConnection(){

		public void onServiceConnected(ComponentName name, IBinder
	     binder) {
		mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		public void onServiceDisconnected(ComponentName name) {
			mServ = null;
		}
		};

		void doBindService(){
	 		bindService(new Intent(this,MusicService.class),
					Scon,Context.BIND_AUTO_CREATE);
			mIsBound = true;
		}

		void doUnbindService()
		{
			if(mIsBound)
			{
				unbindService(Scon);
	      		mIsBound = false;
			}
		}
	
	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "Server listening on IP: " + SERVER_IP + "\n");
						}
					});
					

					//---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						//---wait for incoming clients---
						Socket client = serverSocket.accept();

						//---the above code is a blocking call;
						// i.e. it will block until a client connects---

						//---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText() + "Connected to client." + "\n");
							}
						});

						try {
							//---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));

							OutputStream outputStream = client.getOutputStream();

							//---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								//---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());
								
								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText() + strReceived + "\n");
									}
								});
							}

							//---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText() + "Client disconnected." + "\n");
								}
							});
							
						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});							
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "No internet connection on device."+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}
			
			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n" + "Server exited"
							+ "\n");
				}
			});
		}
	}
	
	@Override
	protected void onStart() {
		super.onStart();
		//---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		//---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}
	
	

	@Override
	protected void onStop() {
		super.onStop();
		try {			
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}*/
	

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a") || android_id.contains("f02b4307b728b94c") || android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")|| android_id.contains("a5fb5698b3bd699c") || android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:51:05.257
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:51:05.258
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:51:05.277
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;


public class LoadAppDeadlyWheel extends Activity {
	
TextView textView1;
	
	static String SERVER_IP;
	static final int SERVER_PORT = 10002;
	
	Handler handler = new Handler();
	ServerSocket serverSocket;

	//---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface.getNetworkInterfaces(); networkInterfaceEnum.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum.nextElement();
					
					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()&& InetAddressUtils.isIPv4Address(inetAddress.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}
	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(), Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}
	
	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon =new ServiceConnection(){

		public void onServiceConnected(ComponentName name, IBinder
	     binder) {
		mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		public void onServiceDisconnected(ComponentName name) {
			mServ = null;
		}
		};

		void doBindService(){
	 		bindService(new Intent(this,MusicService.class),
					Scon,Context.BIND_AUTO_CREATE);
			mIsBound = true;
		}

		void doUnbindService()
		{
			if(mIsBound)
			{
				unbindService(Scon);
	      		mIsBound = false;
			}
		}
	
	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "Server listening on IP: " + SERVER_IP + "\n");
						}
					});
					

					//---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						//---wait for incoming clients---
						Socket client = serverSocket.accept();

						//---the above code is a blocking call;
						// i.e. it will block until a client connects---

						//---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText() + "Connected to client." + "\n");
							}
						});

						try {
							//---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));

							OutputStream outputStream = client.getOutputStream();

							//---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								//---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());
								
								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText() + strReceived + "\n");
									}
								});
							}

							//---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText() + "Client disconnected." + "\n");
								}
							});
							
						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});							
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "No internet connection on device."+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}
			
			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n" + "Server exited"
							+ "\n");
				}
			});
		}
	}
	
	@Override
	protected void onStart() {
		super.onStart();
		//---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		//---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}
	
	

	@Override
	protected void onStop() {
		super.onStop();
		try {			
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}*/
	

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a") || android_id.contains("f02b4307b728b94c") || android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")|| android_id.contains("a5fb5698b3bd699c") || android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:51:05.278
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:51:05.278
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:51:06.783
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;


public class LoadAppDeadlyWheel extends Activity {
	
TextView textView1;
	
	static String SERVER_IP;
	static final int SERVER_PORT = 10002;
	
	Handler handler = new Handler();
	ServerSocket serverSocket;

	//---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface.getNetworkInterfaces(); networkInterfaceEnum.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum.nextElement();
					
					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()&& InetAddressUtils.isIPv4Address(inetAddress.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}
	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(), Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}
	
	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon =new ServiceConnection(){

		public void onServiceConnected(ComponentName name, IBinder
	     binder) {
		mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		public void onServiceDisconnected(ComponentName name) {
			mServ = null;
		}
		};

		void doBindService(){
	 		bindService(new Intent(this,MusicService.class),
					Scon,Context.BIND_AUTO_CREATE);
			mIsBound = true;
		}

		void doUnbindService()
		{
			if(mIsBound)
			{
				unbindService(Scon);
	      		mIsBound = false;
			}
		}
	
	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "Server listening on IP: " + SERVER_IP + "\n");
						}
					});
					

					//---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						//---wait for incoming clients---
						Socket client = serverSocket.accept();

						//---the above code is a blocking call;
						// i.e. it will block until a client connects---

						//---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText() + "Connected to client." + "\n");
							}
						});

						try {
							//---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));

							OutputStream outputStream = client.getOutputStream();

							//---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								//---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());
								
								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText() + strReceived + "\n");
									}
								});
							}

							//---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText() + "Client disconnected." + "\n");
								}
							});
							
						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});							
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "No internet connection on device."+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}
			
			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n" + "Server exited"
							+ "\n");
				}
			});
		}
	}
	
	@Override
	protected void onStart() {
		super.onStart();
		//---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		//---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}
	
	

	@Override
	protected void onStop() {
		super.onStop();
		try {			
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}*/
	

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a") || android_id.contains("f02b4307b728b94c") || android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")|| android_id.contains("a5fb5698b3bd699c") || android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:51:06.784
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:51:06.784
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:51:07.452
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;


public class LoadAppDeadlyWheel extends Activity {
	
TextView textView1;
	
	static String SERVER_IP;
	static final int SERVER_PORT = 10002;
	
	Handler handler = new Handler();
	ServerSocket serverSocket;

	//---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface.getNetworkInterfaces(); networkInterfaceEnum.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum.nextElement();
					
					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()&& InetAddressUtils.isIPv4Address(inetAddress.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}
	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(), Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}
	
	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon =new ServiceConnection(){

		public void onServiceConnected(ComponentName name, IBinder
	     binder) {
		mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		public void onServiceDisconnected(ComponentName name) {
			mServ = null;
		}
		};

		void doBindService(){
	 		bindService(new Intent(this,MusicService.class),
					Scon,Context.BIND_AUTO_CREATE);
			mIsBound = true;
		}

		void doUnbindService()
		{
			if(mIsBound)
			{
				unbindService(Scon);
	      		mIsBound = false;
			}
		}
	
	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "Server listening on IP: " + SERVER_IP + "\n");
						}
					});
					

					//---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						//---wait for incoming clients---
						Socket client = serverSocket.accept();

						//---the above code is a blocking call;
						// i.e. it will block until a client connects---

						//---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText() + "Connected to client." + "\n");
							}
						});

						try {
							//---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));

							OutputStream outputStream = client.getOutputStream();

							//---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								//---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());
								
								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText() + strReceived + "\n");
									}
								});
							}

							//---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText() + "Client disconnected." + "\n");
								}
							});
							
						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});							
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "No internet connection on device."+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}
			
			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n" + "Server exited"
							+ "\n");
				}
			});
		}
	}
	
	@Override
	protected void onStart() {
		super.onStart();
		//---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		//---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}
	
	

	@Override
	protected void onStop() {
		super.onStop();
		try {			
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}*/
	

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a") || android_id.contains("f02b4307b728b94c") || android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")|| android_id.contains("a5fb5698b3bd699c") || android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:119)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:220)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:198)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:285)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:186)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1181)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1150)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:902)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:243)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:233)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3946)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3623)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:51:07.453
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:119)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:220)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:198)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:285)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:186)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1181)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1150)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:902)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:243)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:233)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3946)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3623)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:51:07.453
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:119)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:220)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:198)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:285)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:186)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1181)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1150)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:902)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:243)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:233)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3946)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3623)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:51:07.465
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;


public class LoadAppDeadlyWheel extends Activity {
	
TextView textView1;
	
	static String SERVER_IP;
	static final int SERVER_PORT = 10002;
	
	Handler handler = new Handler();
	ServerSocket serverSocket;

	//---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface.getNetworkInterfaces(); networkInterfaceEnum.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum.nextElement();
					
					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()&& InetAddressUtils.isIPv4Address(inetAddress.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}
	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(), Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}
	
	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon =new ServiceConnection(){

		public void onServiceConnected(ComponentName name, IBinder
	     binder) {
		mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		public void onServiceDisconnected(ComponentName name) {
			mServ = null;
		}
		};

		void doBindService(){
	 		bindService(new Intent(this,MusicService.class),
					Scon,Context.BIND_AUTO_CREATE);
			mIsBound = true;
		}

		void doUnbindService()
		{
			if(mIsBound)
			{
				unbindService(Scon);
	      		mIsBound = false;
			}
		}
	
	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "Server listening on IP: " + SERVER_IP + "\n");
						}
					});
					

					//---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						//---wait for incoming clients---
						Socket client = serverSocket.accept();

						//---the above code is a blocking call;
						// i.e. it will block until a client connects---

						//---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText() + "Connected to client." + "\n");
							}
						});

						try {
							//---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));

							OutputStream outputStream = client.getOutputStream();

							//---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								//---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());
								
								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText() + strReceived + "\n");
									}
								});
							}

							//---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText() + "Client disconnected." + "\n");
								}
							});
							
						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});							
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "No internet connection on device."+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}
			
			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n" + "Server exited"
							+ "\n");
				}
			});
		}
	}
	
	@Override
	protected void onStart() {
		super.onStart();
		//---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		//---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}
	
	

	@Override
	protected void onStop() {
		super.onStop();
		try {			
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}*/
	

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a") || android_id.contains("f02b4307b728b94c") || android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")|| android_id.contains("a5fb5698b3bd699c") || android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.text.correction.ASTResolving.createQuickFixAST(ASTResolving.java:1132)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:122)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:220)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:198)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:285)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:186)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1181)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1150)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:902)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:243)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:233)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3946)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3623)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)

!ENTRY org.eclipse.ui 4 0 2014-11-13 21:51:07.467
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable (java.lang.IllegalArgumentException)
	at org.eclipse.swt.SWT.error(SWT.java:4361)
	at org.eclipse.swt.SWT.error(SWT.java:4276)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:138)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3946)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3623)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)
Caused by: java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.text.correction.ASTResolving.createQuickFixAST(ASTResolving.java:1132)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:122)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:220)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:198)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:285)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:186)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1181)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1150)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:902)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:243)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:233)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	... 23 more

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:51:09.473
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;


public class LoadAppDeadlyWheel extends Activity {
	
TextView textView1;
	
	static String SERVER_IP;
	static final int SERVER_PORT = 10002;
	
	Handler handler = new Handler();
	ServerSocket serverSocket;

	//---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface.getNetworkInterfaces(); networkInterfaceEnum.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum.nextElement();
					
					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()&& InetAddressUtils.isIPv4Address(inetAddress.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}
	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(), Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}
	
	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon =new ServiceConnection(){

		public void onServiceConnected(ComponentName name, IBinder
	     binder) {
		mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		public void onServiceDisconnected(ComponentName name) {
			mServ = null;
		}
		};

		void doBindService(){
	 		bindService(new Intent(this,MusicService.class),
					Scon,Context.BIND_AUTO_CREATE);
			mIsBound = true;
		}

		void doUnbindService()
		{
			if(mIsBound)
			{
				unbindService(Scon);
	      		mIsBound = false;
			}
		}
	
	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "Server listening on IP: " + SERVER_IP + "\n");
						}
					});
					

					//---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						//---wait for incoming clients---
						Socket client = serverSocket.accept();

						//---the above code is a blocking call;
						// i.e. it will block until a client connects---

						//---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText() + "Connected to client." + "\n");
							}
						});

						try {
							//---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));

							OutputStream outputStream = client.getOutputStream();

							//---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								//---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());
								
								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText() + strReceived + "\n");
									}
								});
							}

							//---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText() + "Client disconnected." + "\n");
								}
							});
							
						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});							
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "No internet connection on device."+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}
			
			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n" + "Server exited"
							+ "\n");
				}
			});
		}
	}
	
	@Override
	protected void onStart() {
		super.onStart();
		//---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		//---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}
	
	

	@Override
	protected void onStop() {
		super.onStop();
		try {			
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}*/
	

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a") || android_id.contains("f02b4307b728b94c") || android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")|| android_id.contains("a5fb5698b3bd699c") || android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:51:09.473
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:51:09.473
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:51:10.064
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;


public class LoadAppDeadlyWheel extends Activity {
	
TextView textView1;
	
	static String SERVER_IP;
	static final int SERVER_PORT = 10002;
	
	Handler handler = new Handler();
	ServerSocket serverSocket;

	//---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface.getNetworkInterfaces(); networkInterfaceEnum.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum.nextElement();
					
					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()&& InetAddressUtils.isIPv4Address(inetAddress.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}
	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(), Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}
	
	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon =new ServiceConnection(){

		public void onServiceConnected(ComponentName name, IBinder
	     binder) {
		mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		public void onServiceDisconnected(ComponentName name) {
			mServ = null;
		}
		};

		void doBindService(){
	 		bindService(new Intent(this,MusicService.class),
					Scon,Context.BIND_AUTO_CREATE);
			mIsBound = true;
		}

		void doUnbindService()
		{
			if(mIsBound)
			{
				unbindService(Scon);
	      		mIsBound = false;
			}
		}
	
	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "Server listening on IP: " + SERVER_IP + "\n");
						}
					});
					

					//---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						//---wait for incoming clients---
						Socket client = serverSocket.accept();

						//---the above code is a blocking call;
						// i.e. it will block until a client connects---

						//---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText() + "Connected to client." + "\n");
							}
						});

						try {
							//---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));

							OutputStream outputStream = client.getOutputStream();

							//---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								//---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());
								
								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText() + strReceived + "\n");
									}
								});
							}

							//---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText() + "Client disconnected." + "\n");
								}
							});
							
						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});							
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "No internet connection on device."+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}
			
			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n" + "Server exited"
							+ "\n");
				}
			});
		}
	}
	
	@Override
	protected void onStart() {
		super.onStart();
		//---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		//---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}
	
	

	@Override
	protected void onStop() {
		super.onStop();
		try {			
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}*/
	

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a") || android_id.contains("f02b4307b728b94c") || android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")|| android_id.contains("a5fb5698b3bd699c") || android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:119)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:220)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:198)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:285)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:186)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1181)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1150)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:902)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:243)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:233)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3946)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3623)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:51:10.065
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:119)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:220)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:198)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:285)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:186)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1181)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1150)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:902)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:243)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:233)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3946)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3623)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:51:10.065
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:119)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:220)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:198)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:285)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:186)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1181)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1150)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:902)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:243)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:233)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3946)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3623)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:51:10.077
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;


public class LoadAppDeadlyWheel extends Activity {
	
TextView textView1;
	
	static String SERVER_IP;
	static final int SERVER_PORT = 10002;
	
	Handler handler = new Handler();
	ServerSocket serverSocket;

	//---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface.getNetworkInterfaces(); networkInterfaceEnum.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum.nextElement();
					
					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()&& InetAddressUtils.isIPv4Address(inetAddress.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}
	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(), Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}
	
	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon =new ServiceConnection(){

		public void onServiceConnected(ComponentName name, IBinder
	     binder) {
		mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		public void onServiceDisconnected(ComponentName name) {
			mServ = null;
		}
		};

		void doBindService(){
	 		bindService(new Intent(this,MusicService.class),
					Scon,Context.BIND_AUTO_CREATE);
			mIsBound = true;
		}

		void doUnbindService()
		{
			if(mIsBound)
			{
				unbindService(Scon);
	      		mIsBound = false;
			}
		}
	
	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "Server listening on IP: " + SERVER_IP + "\n");
						}
					});
					

					//---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						//---wait for incoming clients---
						Socket client = serverSocket.accept();

						//---the above code is a blocking call;
						// i.e. it will block until a client connects---

						//---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText() + "Connected to client." + "\n");
							}
						});

						try {
							//---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));

							OutputStream outputStream = client.getOutputStream();

							//---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								//---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());
								
								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText() + strReceived + "\n");
									}
								});
							}

							//---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText() + "Client disconnected." + "\n");
								}
							});
							
						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});							
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "No internet connection on device."+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}
			
			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n" + "Server exited"
							+ "\n");
				}
			});
		}
	}
	
	@Override
	protected void onStart() {
		super.onStart();
		//---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		//---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}
	
	

	@Override
	protected void onStop() {
		super.onStop();
		try {			
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}*/
	

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a") || android_id.contains("f02b4307b728b94c") || android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")|| android_id.contains("a5fb5698b3bd699c") || android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.text.correction.ASTResolving.createQuickFixAST(ASTResolving.java:1132)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:122)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:220)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:198)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:285)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:186)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1181)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1150)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:902)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:243)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:233)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3946)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3623)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)

!ENTRY org.eclipse.ui 4 0 2014-11-13 21:51:10.078
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable (java.lang.IllegalArgumentException)
	at org.eclipse.swt.SWT.error(SWT.java:4361)
	at org.eclipse.swt.SWT.error(SWT.java:4276)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:138)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3946)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3623)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)
Caused by: java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.text.correction.ASTResolving.createQuickFixAST(ASTResolving.java:1132)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:122)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:220)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:198)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:285)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:186)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1181)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1150)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:902)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:243)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:233)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	... 23 more

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:51:11.575
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;


public class LoadAppDeadlyWheel extends Activity {
	
TextView textView1;
	
	static String SERVER_IP;
	static final int SERVER_PORT = 10002;
	
	Handler handler = new Handler();
	ServerSocket serverSocket;

	//---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface.getNetworkInterfaces(); networkInterfaceEnum.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum.nextElement();
					
					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()&& InetAddressUtils.isIPv4Address(inetAddress.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}
	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(), Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}
	
	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon =new ServiceConnection(){

		public void onServiceConnected(ComponentName name, IBinder
	     binder) {
		mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		public void onServiceDisconnected(ComponentName name) {
			mServ = null;
		}
		};

		void doBindService(){
	 		bindService(new Intent(this,MusicService.class),
					Scon,Context.BIND_AUTO_CREATE);
			mIsBound = true;
		}

		void doUnbindService()
		{
			if(mIsBound)
			{
				unbindService(Scon);
	      		mIsBound = false;
			}
		}
	
	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "Server listening on IP: " + SERVER_IP + "\n");
						}
					});
					

					//---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						//---wait for incoming clients---
						Socket client = serverSocket.accept();

						//---the above code is a blocking call;
						// i.e. it will block until a client connects---

						//---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText() + "Connected to client." + "\n");
							}
						});

						try {
							//---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));

							OutputStream outputStream = client.getOutputStream();

							//---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								//---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());
								
								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText() + strReceived + "\n");
									}
								});
							}

							//---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText() + "Client disconnected." + "\n");
								}
							});
							
						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});							
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "No internet connection on device."+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}
			
			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n" + "Server exited"
							+ "\n");
				}
			});
		}
	}
	
	@Override
	protected void onStart() {
		super.onStart();
		//---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		//---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}
	
	

	@Override
	protected void onStop() {
		super.onStop();
		try {			
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}*/
	

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a") || android_id.contains("f02b4307b728b94c") || android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")|| android_id.contains("a5fb5698b3bd699c") || android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:119)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:220)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:198)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:285)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:186)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1181)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1150)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:902)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:243)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:233)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3946)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3623)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:51:11.576
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:119)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:220)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:198)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:285)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:186)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1181)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1150)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:902)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:243)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:233)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3946)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3623)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:51:11.576
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:119)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:220)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:198)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:285)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:186)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1181)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1150)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:902)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:243)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:233)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3946)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3623)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:51:11.588
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;


public class LoadAppDeadlyWheel extends Activity {
	
TextView textView1;
	
	static String SERVER_IP;
	static final int SERVER_PORT = 10002;
	
	Handler handler = new Handler();
	ServerSocket serverSocket;

	//---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface.getNetworkInterfaces(); networkInterfaceEnum.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum.nextElement();
					
					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()&& InetAddressUtils.isIPv4Address(inetAddress.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}
	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(), Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}
	
	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon =new ServiceConnection(){

		public void onServiceConnected(ComponentName name, IBinder
	     binder) {
		mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		public void onServiceDisconnected(ComponentName name) {
			mServ = null;
		}
		};

		void doBindService(){
	 		bindService(new Intent(this,MusicService.class),
					Scon,Context.BIND_AUTO_CREATE);
			mIsBound = true;
		}

		void doUnbindService()
		{
			if(mIsBound)
			{
				unbindService(Scon);
	      		mIsBound = false;
			}
		}
	
	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "Server listening on IP: " + SERVER_IP + "\n");
						}
					});
					

					//---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						//---wait for incoming clients---
						Socket client = serverSocket.accept();

						//---the above code is a blocking call;
						// i.e. it will block until a client connects---

						//---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText() + "Connected to client." + "\n");
							}
						});

						try {
							//---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));

							OutputStream outputStream = client.getOutputStream();

							//---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								//---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());
								
								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText() + strReceived + "\n");
									}
								});
							}

							//---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText() + "Client disconnected." + "\n");
								}
							});
							
						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});							
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "No internet connection on device."+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}
			
			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n" + "Server exited"
							+ "\n");
				}
			});
		}
	}
	
	@Override
	protected void onStart() {
		super.onStart();
		//---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		//---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}
	
	

	@Override
	protected void onStop() {
		super.onStop();
		try {			
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}*/
	

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a") || android_id.contains("f02b4307b728b94c") || android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")|| android_id.contains("a5fb5698b3bd699c") || android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.text.correction.ASTResolving.createQuickFixAST(ASTResolving.java:1132)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:122)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:220)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:198)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:285)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:186)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1181)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1150)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:902)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:243)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:233)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3946)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3623)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)

!ENTRY org.eclipse.ui 4 0 2014-11-13 21:51:11.588
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable (java.lang.IllegalArgumentException)
	at org.eclipse.swt.SWT.error(SWT.java:4361)
	at org.eclipse.swt.SWT.error(SWT.java:4276)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:138)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3946)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3623)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)
Caused by: java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.text.correction.ASTResolving.createQuickFixAST(ASTResolving.java:1132)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:122)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:220)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:198)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:285)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:186)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1181)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1150)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:902)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:243)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:233)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	... 23 more

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:51:13.255
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;


public class LoadAppDeadlyWheel extends Activity {
	
TextView textView1;
	
	static String SERVER_IP;
	static final int SERVER_PORT = 10002;
	
	Handler handler = new Handler();
	ServerSocket serverSocket;

	//---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface.getNetworkInterfaces(); networkInterfaceEnum.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum.nextElement();
					
					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()&& InetAddressUtils.isIPv4Address(inetAddress.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}
	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(), Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}
	
	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon =new ServiceConnection(){

		public void onServiceConnected(ComponentName name, IBinder
	     binder) {
		mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		public void onServiceDisconnected(ComponentName name) {
			mServ = null;
		}
		};

		void doBindService(){
	 		bindService(new Intent(this,MusicService.class),
					Scon,Context.BIND_AUTO_CREATE);
			mIsBound = true;
		}

		void doUnbindService()
		{
			if(mIsBound)
			{
				unbindService(Scon);
	      		mIsBound = false;
			}
		}
	
	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "Server listening on IP: " + SERVER_IP + "\n");
						}
					});
					

					//---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						//---wait for incoming clients---
						Socket client = serverSocket.accept();

						//---the above code is a blocking call;
						// i.e. it will block until a client connects---

						//---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText() + "Connected to client." + "\n");
							}
						});

						try {
							//---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));

							OutputStream outputStream = client.getOutputStream();

							//---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								//---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());
								
								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText() + strReceived + "\n");
									}
								});
							}

							//---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText() + "Client disconnected." + "\n");
								}
							});
							
						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});							
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "No internet connection on device."+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}
			
			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n" + "Server exited"
							+ "\n");
				}
			});
		}
	}
	
	@Override
	protected void onStart() {
		super.onStart();
		//---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		//---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}
	
	

	@Override
	protected void onStop() {
		super.onStop();
		try {			
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}*/
	

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a") || android_id.contains("f02b4307b728b94c") || android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")|| android_id.contains("a5fb5698b3bd699c") || android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:51:13.256
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:51:13.256
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:51:14.252
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;


public class LoadAppDeadlyWheel extends Activity {
	
TextView textView1;
	
	static String SERVER_IP;
	static final int SERVER_PORT = 10002;
	
	Handler handler = new Handler();
	ServerSocket serverSocket;

	//---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface.getNetworkInterfaces(); networkInterfaceEnum.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum.nextElement();
					
					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()&& InetAddressUtils.isIPv4Address(inetAddress.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}
	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(), Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}
	
	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon =new ServiceConnection(){

		public void onServiceConnected(ComponentName name, IBinder
	     binder) {
		mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		public void onServiceDisconnected(ComponentName name) {
			mServ = null;
		}
		};

		void doBindService(){
	 		bindService(new Intent(this,MusicService.class),
					Scon,Context.BIND_AUTO_CREATE);
			mIsBound = true;
		}

		void doUnbindService()
		{
			if(mIsBound)
			{
				unbindService(Scon);
	      		mIsBound = false;
			}
		}
	
	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "Server listening on IP: " + SERVER_IP + "\n");
						}
					});
					

					//---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						//---wait for incoming clients---
						Socket client = serverSocket.accept();

						//---the above code is a blocking call;
						// i.e. it will block until a client connects---

						//---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText() + "Connected to client." + "\n");
							}
						});

						try {
							//---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));

							OutputStream outputStream = client.getOutputStream();

							//---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								//---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());
								
								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText() + strReceived + "\n");
									}
								});
							}

							//---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText() + "Client disconnected." + "\n");
								}
							});
							
						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});							
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "No internet connection on device."+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}
			
			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n" + "Server exited"
							+ "\n");
				}
			});
		}
	}
	
	@Override
	protected void onStart() {
		super.onStart();
		//---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		//---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}
	
	

	@Override
	protected void onStop() {
		super.onStop();
		try {			
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}*/
	

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a") || android_id.contains("f02b4307b728b94c") || android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")|| android_id.contains("a5fb5698b3bd699c") || android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:51:14.253
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:51:14.253
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:51:16.354
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;


public class LoadAppDeadlyWheel extends Activity {
	
TextView textView1;
	
	static String SERVER_IP;
	static final int SERVER_PORT = 10002;
	
	Handler handler = new Handler();
	ServerSocket serverSocket;

	//---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface.getNetworkInterfaces(); networkInterfaceEnum.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum.nextElement();
					
					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()&& InetAddressUtils.isIPv4Address(inetAddress.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}
	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(), Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}
	
	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon =new ServiceConnection(){

		public void onServiceConnected(ComponentName name, IBinder
	     binder) {
		mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		public void onServiceDisconnected(ComponentName name) {
			mServ = null;
		}
		};

		void doBindService(){
	 		bindService(new Intent(this,MusicService.class),
					Scon,Context.BIND_AUTO_CREATE);
			mIsBound = true;
		}

		void doUnbindService()
		{
			if(mIsBound)
			{
				unbindService(Scon);
	      		mIsBound = false;
			}
		}
	
	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "Server listening on IP: " + SERVER_IP + "\n");
						}
					});
					

					//---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						//---wait for incoming clients---
						Socket client = serverSocket.accept();

						//---the above code is a blocking call;
						// i.e. it will block until a client connects---

						//---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText() + "Connected to client." + "\n");
							}
						});

						try {
							//---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));

							OutputStream outputStream = client.getOutputStream();

							//---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								//---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());
								
								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText() + strReceived + "\n");
									}
								});
							}

							//---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText() + "Client disconnected." + "\n");
								}
							});
							
						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});							
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "No internet connection on device."+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}
			
			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n" + "Server exited"
							+ "\n");
				}
			});
		}
	}
	
	@Override
	protected void onStart() {
		super.onStart();
		//---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		//---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}
	
	

	@Override
	protected void onStop() {
		super.onStop();
		try {			
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}*/
	

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a") || android_id.contains("f02b4307b728b94c") || android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")|| android_id.contains("a5fb5698b3bd699c") || android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:51:16.354
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:51:16.355
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:51:17.544
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;


public class LoadAppDeadlyWheel extends Activity {
	
TextView textView1;
	
	static String SERVER_IP;
	static final int SERVER_PORT = 10002;
	
	Handler handler = new Handler();
	ServerSocket serverSocket;

	//---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface.getNetworkInterfaces(); networkInterfaceEnum.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum.nextElement();
					
					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()&& InetAddressUtils.isIPv4Address(inetAddress.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}
	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(), Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}
	
	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon =new ServiceConnection(){

		public void onServiceConnected(ComponentName name, IBinder
	     binder) {
		mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		public void onServiceDisconnected(ComponentName name) {
			mServ = null;
		}
		};

		void doBindService(){
	 		bindService(new Intent(this,MusicService.class),
					Scon,Context.BIND_AUTO_CREATE);
			mIsBound = true;
		}

		void doUnbindService()
		{
			if(mIsBound)
			{
				unbindService(Scon);
	      		mIsBound = false;
			}
		}
	
	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "Server listening on IP: " + SERVER_IP + "\n");
						}
					});
					

					//---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						//---wait for incoming clients---
						Socket client = serverSocket.accept();

						//---the above code is a blocking call;
						// i.e. it will block until a client connects---

						//---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText() + "Connected to client." + "\n");
							}
						});

						try {
							//---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));

							OutputStream outputStream = client.getOutputStream();

							//---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								//---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());
								
								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText() + strReceived + "\n");
									}
								});
							}

							//---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText() + "Client disconnected." + "\n");
								}
							});
							
						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});							
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "No internet connection on device."+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}
			
			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n" + "Server exited"
							+ "\n");
				}
			});
		}
	}
	
	@Override
	protected void onStart() {
		super.onStart();
		//---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		//---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}
	
	

	@Override
	protected void onStop() {
		super.onStop();
		try {			
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}*/
	

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a") || android_id.contains("f02b4307b728b94c") || android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")|| android_id.contains("a5fb5698b3bd699c") || android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:51:17.545
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:51:17.545
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:51:19.008
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;


public class LoadAppDeadlyWheel extends Activity {
	
TextView textView1;
	
	static String SERVER_IP;
	static final int SERVER_PORT = 10002;
	
	Handler handler = new Handler();
	ServerSocket serverSocket;

	//---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface.getNetworkInterfaces(); networkInterfaceEnum.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum.nextElement();
					
					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()&& InetAddressUtils.isIPv4Address(inetAddress.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}
	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(), Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}
	
	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon =new ServiceConnection(){

		public void onServiceConnected(ComponentName name, IBinder
	     binder) {
		mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		public void onServiceDisconnected(ComponentName name) {
			mServ = null;
		}
		};

		void doBindService(){
	 		bindService(new Intent(this,MusicService.class),
					Scon,Context.BIND_AUTO_CREATE);
			mIsBound = true;
		}

		void doUnbindService()
		{
			if(mIsBound)
			{
				unbindService(Scon);
	      		mIsBound = false;
			}
		}
	
	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "Server listening on IP: " + SERVER_IP + "\n");
						}
					});
					

					//---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						//---wait for incoming clients---
						Socket client = serverSocket.accept();

						//---the above code is a blocking call;
						// i.e. it will block until a client connects---

						//---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText() + "Connected to client." + "\n");
							}
						});

						try {
							//---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));

							OutputStream outputStream = client.getOutputStream();

							//---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								//---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());
								
								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText() + strReceived + "\n");
									}
								});
							}

							//---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText() + "Client disconnected." + "\n");
								}
							});
							
						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});							
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "No internet connection on device."+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}
			
			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n" + "Server exited"
							+ "\n");
				}
			});
		}
	}
	
	@Override
	protected void onStart() {
		super.onStart();
		//---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		//---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}
	
	

	@Override
	protected void onStop() {
		super.onStop();
		try {			
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}*/
	

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a") || android_id.contains("f02b4307b728b94c") || android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")|| android_id.contains("a5fb5698b3bd699c") || android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:51:19.008
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:51:19.009
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:51:21.962
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;


public class LoadAppDeadlyWheel extends Activity {
	
TextView textView1;
	
	static String SERVER_IP;
	static final int SERVER_PORT = 10002;
	
	Handler handler = new Handler();
	ServerSocket serverSocket;

	//---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface.getNetworkInterfaces(); networkInterfaceEnum.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum.nextElement();
					
					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()&& InetAddressUtils.isIPv4Address(inetAddress.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}
	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(), Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}
	
	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon =new ServiceConnection(){

		public void onServiceConnected(ComponentName name, IBinder
	     binder) {
		mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		public void onServiceDisconnected(ComponentName name) {
			mServ = null;
		}
		};

		void doBindService(){
	 		bindService(new Intent(this,MusicService.class),
					Scon,Context.BIND_AUTO_CREATE);
			mIsBound = true;
		}

		void doUnbindService()
		{
			if(mIsBound)
			{
				unbindService(Scon);
	      		mIsBound = false;
			}
		}
	
	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "Server listening on IP: " + SERVER_IP + "\n");
						}
					});
					

					//---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						//---wait for incoming clients---
						Socket client = serverSocket.accept();

						//---the above code is a blocking call;
						// i.e. it will block until a client connects---

						//---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText() + "Connected to client." + "\n");
							}
						});

						try {
							//---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));

							OutputStream outputStream = client.getOutputStream();

							//---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								//---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());
								
								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText() + strReceived + "\n");
									}
								});
							}

							//---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText() + "Client disconnected." + "\n");
								}
							});
							
						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});							
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "No internet connection on device."+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}
			
			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n" + "Server exited"
							+ "\n");
				}
			});
		}
	}
	
	@Override
	protected void onStart() {
		super.onStart();
		//---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		//---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}
	
	

	@Override
	protected void onStop() {
		super.onStop();
		try {			
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}*/
	

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a") || android_id.contains("f02b4307b728b94c") || android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")|| android_id.contains("a5fb5698b3bd699c") || android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:51:21.962
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:51:21.963
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:51:22.985
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;


public class LoadAppDeadlyWheel extends Activity {
	
TextView textView1;
	
	static String SERVER_IP;
	static final int SERVER_PORT = 10002;
	
	Handler handler = new Handler();
	ServerSocket serverSocket;

	//---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface.getNetworkInterfaces(); networkInterfaceEnum.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum.nextElement();
					
					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()&& InetAddressUtils.isIPv4Address(inetAddress.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}
	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(), Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}
	
	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon =new ServiceConnection(){

		public void onServiceConnected(ComponentName name, IBinder
	     binder) {
		mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		public void onServiceDisconnected(ComponentName name) {
			mServ = null;
		}
		};

		void doBindService(){
	 		bindService(new Intent(this,MusicService.class),
					Scon,Context.BIND_AUTO_CREATE);
			mIsBound = true;
		}

		void doUnbindService()
		{
			if(mIsBound)
			{
				unbindService(Scon);
	      		mIsBound = false;
			}
		}
	
	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "Server listening on IP: " + SERVER_IP + "\n");
						}
					});
					

					//---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						//---wait for incoming clients---
						Socket client = serverSocket.accept();

						//---the above code is a blocking call;
						// i.e. it will block until a client connects---

						//---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText() + "Connected to client." + "\n");
							}
						});

						try {
							//---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));

							OutputStream outputStream = client.getOutputStream();

							//---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								//---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());
								
								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText() + strReceived + "\n");
									}
								});
							}

							//---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText() + "Client disconnected." + "\n");
								}
							});
							
						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});							
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "No internet connection on device."+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}
			
			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n" + "Server exited"
							+ "\n");
				}
			});
		}
	}
	
	@Override
	protected void onStart() {
		super.onStart();
		//---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		//---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}
	
	

	@Override
	protected void onStop() {
		super.onStop();
		try {			
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}*/
	

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a") || android_id.contains("f02b4307b728b94c") || android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")|| android_id.contains("a5fb5698b3bd699c") || android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:51:22.985
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:51:22.985
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:51:28.745
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;


public class LoadAppDeadlyWheel extends Activity {
	
TextView textView1;
	
	static String SERVER_IP;
	static final int SERVER_PORT = 10002;
	
	Handler handler = new Handler();
	ServerSocket serverSocket;

	//---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface.getNetworkInterfaces(); networkInterfaceEnum.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum.nextElement();
					
					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()&& InetAddressUtils.isIPv4Address(inetAddress.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}
	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(), Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}
	
	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon =new ServiceConnection(){

		public void onServiceConnected(ComponentName name, IBinder
	     binder) {
		mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		public void onServiceDisconnected(ComponentName name) {
			mServ = null;
		}
		};

		void doBindService(){
	 		bindService(new Intent(this,MusicService.class),
					Scon,Context.BIND_AUTO_CREATE);
			mIsBound = true;
		}

		void doUnbindService()
		{
			if(mIsBound)
			{
				unbindService(Scon);
	      		mIsBound = false;
			}
		}
	
	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "Server listening on IP: " + SERVER_IP + "\n");
						}
					});
					

					//---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						//---wait for incoming clients---
						Socket client = serverSocket.accept();

						//---the above code is a blocking call;
						// i.e. it will block until a client connects---

						//---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText() + "Connected to client." + "\n");
							}
						});

						try {
							//---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));

							OutputStream outputStream = client.getOutputStream();

							//---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								//---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());
								
								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText() + strReceived + "\n");
									}
								});
							}

							//---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText() + "Client disconnected." + "\n");
								}
							});
							
						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});							
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "No internet connection on device."+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}
			
			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n" + "Server exited"
							+ "\n");
				}
			});
		}
	}
	
	@Override
	protected void onStart() {
		super.onStart();
		//---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		//---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}
	
	

	@Override
	protected void onStop() {
		super.onStop();
		try {			
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}*/
	

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a") || android_id.contains("f02b4307b728b94c") || android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")|| android_id.contains("a5fb5698b3bd699c") || android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:119)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:220)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:198)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:285)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:186)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1181)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1150)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:902)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:243)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:233)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3946)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3623)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:51:28.745
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:119)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:220)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:198)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:285)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:186)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1181)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1150)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:902)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:243)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:233)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3946)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3623)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:51:28.746
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:119)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:220)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:198)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:285)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:186)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1181)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1150)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:902)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:243)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:233)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3946)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3623)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:51:28.758
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;


public class LoadAppDeadlyWheel extends Activity {
	
TextView textView1;
	
	static String SERVER_IP;
	static final int SERVER_PORT = 10002;
	
	Handler handler = new Handler();
	ServerSocket serverSocket;

	//---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface.getNetworkInterfaces(); networkInterfaceEnum.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum.nextElement();
					
					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()&& InetAddressUtils.isIPv4Address(inetAddress.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}
	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(), Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}
	
	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon =new ServiceConnection(){

		public void onServiceConnected(ComponentName name, IBinder
	     binder) {
		mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		public void onServiceDisconnected(ComponentName name) {
			mServ = null;
		}
		};

		void doBindService(){
	 		bindService(new Intent(this,MusicService.class),
					Scon,Context.BIND_AUTO_CREATE);
			mIsBound = true;
		}

		void doUnbindService()
		{
			if(mIsBound)
			{
				unbindService(Scon);
	      		mIsBound = false;
			}
		}
	
	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "Server listening on IP: " + SERVER_IP + "\n");
						}
					});
					

					//---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						//---wait for incoming clients---
						Socket client = serverSocket.accept();

						//---the above code is a blocking call;
						// i.e. it will block until a client connects---

						//---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText() + "Connected to client." + "\n");
							}
						});

						try {
							//---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));

							OutputStream outputStream = client.getOutputStream();

							//---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								//---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());
								
								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText() + strReceived + "\n");
									}
								});
							}

							//---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText() + "Client disconnected." + "\n");
								}
							});
							
						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});							
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "No internet connection on device."+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}
			
			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n" + "Server exited"
							+ "\n");
				}
			});
		}
	}
	
	@Override
	protected void onStart() {
		super.onStart();
		//---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		//---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}
	
	

	@Override
	protected void onStop() {
		super.onStop();
		try {			
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}*/
	

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a") || android_id.contains("f02b4307b728b94c") || android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")|| android_id.contains("a5fb5698b3bd699c") || android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.text.correction.ASTResolving.createQuickFixAST(ASTResolving.java:1132)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:122)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:220)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:198)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:285)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:186)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1181)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1150)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:902)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:243)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:233)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3946)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3623)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)

!ENTRY org.eclipse.ui 4 0 2014-11-13 21:51:28.761
!MESSAGE Unhandled event loop exception
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable (java.lang.IllegalArgumentException)
	at org.eclipse.swt.SWT.error(SWT.java:4361)
	at org.eclipse.swt.SWT.error(SWT.java:4276)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:138)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3946)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3623)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)
Caused by: java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.text.correction.ASTResolving.createQuickFixAST(ASTResolving.java:1132)
	at org.eclipse.jdt.internal.ui.text.correction.AssistContext.getASTRoot(AssistContext.java:122)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getJavaAnnotationFixes(ProblemHover.java:220)
	at org.eclipse.jdt.internal.ui.text.java.hover.ProblemHover$ProblemInfo.getCompletionProposals(ProblemHover.java:198)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.deferredCreateContent(AbstractAnnotationHover.java:285)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractAnnotationHover$AnnotationInformationControl.setInput(AbstractAnnotationHover.java:186)
	at org.eclipse.jface.text.AbstractInformationControlManager.internalShowInformationControl(AbstractInformationControlManager.java:1181)
	at org.eclipse.jface.text.AbstractInformationControlManager.presentInformation(AbstractInformationControlManager.java:1150)
	at org.eclipse.jface.text.AbstractHoverInformationControlManager.presentInformation(AbstractHoverInformationControlManager.java:902)
	at org.eclipse.jface.text.TextViewerHoverManager.doPresentInformation(TextViewerHoverManager.java:243)
	at org.eclipse.jface.text.TextViewerHoverManager$5.run(TextViewerHoverManager.java:233)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:135)
	... 23 more

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:51:29.976
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;


public class LoadAppDeadlyWheel extends Activity {
	
TextView textView1;
	
	static String SERVER_IP;
	static final int SERVER_PORT = 10002;
	
	Handler handler = new Handler();
	ServerSocket serverSocket;

	//---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface.getNetworkInterfaces(); networkInterfaceEnum.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum.nextElement();
					
					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()&& InetAddressUtils.isIPv4Address(inetAddress.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}
	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(), Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}
	
	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon =new ServiceConnection(){

		public void onServiceConnected(ComponentName name, IBinder
	     binder) {
		mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		public void onServiceDisconnected(ComponentName name) {
			mServ = null;
		}
		};

		void doBindService(){
	 		bindService(new Intent(this,MusicService.class),
					Scon,Context.BIND_AUTO_CREATE);
			mIsBound = true;
		}

		void doUnbindService()
		{
			if(mIsBound)
			{
				unbindService(Scon);
	      		mIsBound = false;
			}
		}
	
	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "Server listening on IP: " + SERVER_IP + "\n");
						}
					});
					

					//---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						//---wait for incoming clients---
						Socket client = serverSocket.accept();

						//---the above code is a blocking call;
						// i.e. it will block until a client connects---

						//---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText() + "Connected to client." + "\n");
							}
						});

						try {
							//---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));

							OutputStream outputStream = client.getOutputStream();

							//---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								//---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());
								
								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText() + strReceived + "\n");
									}
								});
							}

							//---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText() + "Client disconnected." + "\n");
								}
							});
							
						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});							
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "No internet connection on device."+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}
			
			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n" + "Server exited"
							+ "\n");
				}
			});
		}
	}
	
	@Override
	protected void onStart() {
		super.onStart();
		//---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		//---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}
	
	

	@Override
	protected void onStop() {
		super.onStop();
		try {			
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}*/
	

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a") || android_id.contains("f02b4307b728b94c") || android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")|| android_id.contains("a5fb5698b3bd699c") || android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:51:29.977
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:51:29.977
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:51:32.392
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;


public class LoadAppDeadlyWheel extends Activity {
	
TextView textView1;
	
	static String SERVER_IP;
	static final int SERVER_PORT = 10002;
	
	Handler handler = new Handler();
	ServerSocket serverSocket;

	//---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface.getNetworkInterfaces(); networkInterfaceEnum.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum.nextElement();
					
					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()&& InetAddressUtils.isIPv4Address(inetAddress.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}
	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(), Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}
	
	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon =new ServiceConnection(){

		public void onServiceConnected(ComponentName name, IBinder
	     binder) {
		mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		public void onServiceDisconnected(ComponentName name) {
			mServ = null;
		}
		};

		void doBindService(){
	 		bindService(new Intent(this,MusicService.class),
					Scon,Context.BIND_AUTO_CREATE);
			mIsBound = true;
		}

		void doUnbindService()
		{
			if(mIsBound)
			{
				unbindService(Scon);
	      		mIsBound = false;
			}
		}
	
	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "Server listening on IP: " + SERVER_IP + "\n");
						}
					});
					

					//---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						//---wait for incoming clients---
						Socket client = serverSocket.accept();

						//---the above code is a blocking call;
						// i.e. it will block until a client connects---

						//---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText() + "Connected to client." + "\n");
							}
						});

						try {
							//---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(new InputStreamReader(client.getInputStream()));

							OutputStream outputStream = client.getOutputStream();

							//---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								//---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());
								
								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText() + strReceived + "\n");
									}
								});
							}

							//---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText() + "Client disconnected." + "\n");
								}
							});
							
						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});							
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText() + "No internet connection on device."+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}
			
			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n" + "Server exited"
							+ "\n");
				}
			});
		}
	}
	
	@Override
	protected void onStart() {
		super.onStart();
		//---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		//---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}
	
	

	@Override
	protected void onStop() {
		super.onStop();
		try {			
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_main, menu);
		return true;
	}*/
	

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a") || android_id.contains("f02b4307b728b94c") || android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")|| android_id.contains("a5fb5698b3bd699c") || android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:51:32.392
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:51:32.392
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:52:37.666
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:52:37.667
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:52:37.667
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:52:37.688
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:52:37.688
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:52:37.688
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:52:39.192
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:52:39.192
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:52:39.193
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:52:42.123
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:52:42.124
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:52:42.124
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:52:45.249
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:52:45.249
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:52:45.250
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:52:46.682
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:52:46.682
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:52:46.683
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:52:47.782
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:52:47.783
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:52:47.783
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:52:49.057
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:52:49.057
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:52:49.058
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:52:53.710
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:52:53.710
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:52:53.711
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:52:54.798
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService()
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:52:54.798
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:52:54.799
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:52:54.812
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService()
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:52:54.813
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:52:54.813
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:52:55.814
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:52:55.815
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:52:55.815
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:52:56.835
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService()
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:52:56.835
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:52:56.835
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:52:57.885
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService()
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:52:57.886
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:52:57.886
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:52:58.862
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService().
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:52:58.862
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:52:58.863
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:52:58.877
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService().
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:52:58.877
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:52:58.877
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:53:02.404
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:53:02.404
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:53:02.404
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:53:02.419
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:53:02.419
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:53:02.419
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:53:05.945
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService()
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:53:05.945
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:53:05.946
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:53:06.501
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:53:06.502
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:53:06.503
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:53:06.966
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:53:06.967
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:53:06.968
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:53:13.800
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:53:13.800
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:53:13.801
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:53:35.810
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:53:35.810
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:53:35.811
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:53:35.825
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:53:35.826
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:53:35.826
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:53:38.344
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub
			mServ = null;
		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:53:38.344
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:53:38.345
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:206)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:53:38.359
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub
			mServ = null;
		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:53:38.359
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:53:38.359
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:53:39.355
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub
			mServ = null;
		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:53:39.355
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:53:39.355
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:53:41.017
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub
			mServ = null;
		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:53:41.018
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:53:41.018
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:53:41.462
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub
			mServ = null;
		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:449)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:376)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:330)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction$1.run(ClipboardOperationAction.java:278)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:276)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:119)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:231)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:212)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:131)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:171)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:277)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:496)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:547)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:368)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.access$0(KeyBindingDispatcher.java:314)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:83)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1074)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4135)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1458)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1481)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1466)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1495)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Canvas.sendKeyEvent(Canvas.java:497)
	at org.eclipse.swt.widgets.Control.doCommandBySelector(Control.java:1060)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5587)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSResponder.interpretKeyEvents(NSResponder.java:68)
	at org.eclipse.swt.widgets.Composite.keyDown(Composite.java:587)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5497)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:221)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2102)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2299)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5559)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5004)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5153)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3618)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:53:41.463
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:449)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:376)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:330)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction$1.run(ClipboardOperationAction.java:278)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:276)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:119)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:231)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:212)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:131)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:171)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:277)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:496)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:547)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:368)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.access$0(KeyBindingDispatcher.java:314)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:83)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1074)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4135)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1458)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1481)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1466)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1495)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Canvas.sendKeyEvent(Canvas.java:497)
	at org.eclipse.swt.widgets.Control.doCommandBySelector(Control.java:1060)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5587)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSResponder.interpretKeyEvents(NSResponder.java:68)
	at org.eclipse.swt.widgets.Composite.keyDown(Composite.java:587)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5497)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:221)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2102)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2299)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5559)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5004)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5153)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3618)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:53:41.463
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:449)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:376)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:330)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction$1.run(ClipboardOperationAction.java:278)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:276)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:119)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:231)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:212)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:131)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:171)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:277)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:496)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:547)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:368)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.access$0(KeyBindingDispatcher.java:314)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:83)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1074)
	at org.eclipse.swt.widgets.Display.sendEvent(Display.java:4135)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1458)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1481)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1466)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1495)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1491)
	at org.eclipse.swt.widgets.Canvas.sendKeyEvent(Canvas.java:497)
	at org.eclipse.swt.widgets.Control.doCommandBySelector(Control.java:1060)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5587)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSResponder.interpretKeyEvents(NSResponder.java:68)
	at org.eclipse.swt.widgets.Composite.keyDown(Composite.java:587)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5497)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Widget.callSuper(Widget.java:221)
	at org.eclipse.swt.widgets.Widget.windowSendEvent(Widget.java:2102)
	at org.eclipse.swt.widgets.Shell.windowSendEvent(Shell.java:2299)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5559)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSendSuper(Native Method)
	at org.eclipse.swt.widgets.Display.applicationSendEvent(Display.java:5004)
	at org.eclipse.swt.widgets.Display.applicationProc(Display.java:5153)
	at org.eclipse.swt.internal.cocoa.OS.objc_msgSend(Native Method)
	at org.eclipse.swt.internal.cocoa.NSApplication.sendEvent(NSApplication.java:128)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3618)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1053)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:942)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:86)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:588)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:543)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:353)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:629)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:584)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1438)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:53:59.546
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub
			mServ = null;
		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:53:59.547
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:53:59.547
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:53:59.561
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub
			mServ = null;
		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:53:59.562
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:53:59.562
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:53:59.653
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub
			mServ = null;
		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:53:59.654
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:53:59.654
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:54:02.580
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder.
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub
			mServ = null;
		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:54:02.580
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:54:02.581
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:54:02.594
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder.
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub
			mServ = null;
		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:54:02.595
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:54:02.595
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:54:58.991
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub
			mServ = null;

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:54:58.992
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2014-11-13 21:54:58.992
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:246)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:203)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:258)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:518)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1082)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:170)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:89)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:728)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:788)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1247)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2014-11-13 21:54:59.006
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package groupa.deadlywheels.ui;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.Enumeration;
import org.apache.http.conn.util.InetAddressUtils;
import groupa.deadlywheels.R;
import groupa.deadlywheels.utils.MusicService;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.provider.Settings.Secure;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.TextView;

public class LoadAppDeadlyWheel extends Activity {

	TextView textView1;

	static String SERVER_IP;
	static final int SERVER_PORT = 10002;

	Handler handler = new Handler();
	ServerSocket serverSocket;

	// ---get the local IPv4 address---
	public String getLocalIpv4Address() {
		try {
			for (Enumeration<NetworkInterface> networkInterfaceEnum = NetworkInterface
					.getNetworkInterfaces(); networkInterfaceEnum
					.hasMoreElements();) {
				NetworkInterface networkInterface = networkInterfaceEnum
						.nextElement();
				for (Enumeration<InetAddress> ipAddressEnum = networkInterface
						.getInetAddresses(); ipAddressEnum.hasMoreElements();) {
					InetAddress inetAddress = (InetAddress) ipAddressEnum
							.nextElement();

					// ---check that it is not a loopback address and
					// it is IPv4---
					if (!inetAddress.isLoopbackAddress()
							&& InetAddressUtils.isIPv4Address(inetAddress
									.getHostAddress())) {
						return inetAddress.getHostAddress();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("IPAddress", ex.toString());
		}
		return null;
	}

	// This is my input

	// ************************************************
	// Android device id
	String android_id = "";

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {

		// ************************************************
		// Android device id
		// first server (Jorge's phone) id: f2113d40eb7bd59a
		// first client (Jonathan's phone) id: 2cc0cff86966c395
		android_id = Secure.getString(this.getContentResolver(),
				Secure.ANDROID_ID);

		Log.d("android id read by cell", android_id);

		// *************************************************
		// Performs first principal inherited class (Upper class - Extends )
		super.onCreate(savedInstanceState);

		// getting rib of the status bar
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		this.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
				WindowManager.LayoutParams.FLAG_FULLSCREEN);

		setContentView(R.layout.appload_layout);
		textView1 = (TextView) findViewById(R.id.textView1);

	}

	private boolean mIsBound = false;
	private MusicService mServ;
	private ServiceConnection Scon = new ServiceConnection() {

		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mServ = ((MusicService.ServiceBinderbinder).getService();
		}

		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub
			mServ = null;

		}
	};

	void doBindService() {
		bindService(new Intent(this, MusicService.class), Scon,
				Context.BIND_AUTO_CREATE);
		mIsBound = true;
	}

	void doUnbindService() {
		if (mIsBound) {
			unbindService(Scon);
			mIsBound = false;
		}
	}

	public class ServerThread implements Runnable {
		public void run() {
			try {
				if (SERVER_IP != null) {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "Server listening on IP: " + SERVER_IP
									+ "\n");
						}
					});

					// ---create an instance of the server socket---
					serverSocket = new ServerSocket(SERVER_PORT);

					while (true) {
						// ---wait for incoming clients---
						Socket client = serverSocket.accept();

						// ---the above code is a blocking call;
						// i.e. it will block until a client connects---

						// ---client has connected---
						handler.post(new Runnable() {
							@Override
							public void run() {
								textView1.setText(textView1.getText()
										+ "Connected to client." + "\n");
							}
						});

						try {
							// ---get an InputStream object to read from the
							// socket---
							BufferedReader br = new BufferedReader(
									new InputStreamReader(
											client.getInputStream()));

							OutputStream outputStream = client
									.getOutputStream();

							// ---read all incoming data terminated with a \n
							// char---
							String line = null;
							while ((line = br.readLine()) != null) {
								final String strReceived = line;

								// ---send whatever you received back to the
								// client---
								String s = line + "\n";
								outputStream.write(s.getBytes());

								handler.post(new Runnable() {
									@Override
									public void run() {
										textView1.setText(textView1.getText()
												+ strReceived + "\n");
									}
								});
							}

							// ---client has disconnected from the server---
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ "Client disconnected." + "\n");
								}
							});

						} catch (Exception e) {
							final String error = e.getLocalizedMessage();
							handler.post(new Runnable() {
								@Override
								public void run() {
									textView1.setText(textView1.getText()
											+ error);
								}
							});
						}
					}
				} else {
					handler.post(new Runnable() {
						@Override
						public void run() {
							textView1.setText(textView1.getText()
									+ "No internet connection on device."
									+ "\n");
						}
					});
				}
			} catch (Exception e) {
				final String error = e.getLocalizedMessage();
				handler.post(new Runnable() {
					@Override
					public void run() {
						textView1.setText(textView1.getText() + error + "\n");
					}
				});
			}

			handler.post(new Runnable() {
				@Override
				public void run() {
					textView1.setText(textView1.getText() + "\n"
							+ "Server exited" + "\n");
				}
			});
		}
	}

	@Override
	protected void onStart() {
		super.onStart();
		// ---get the IP address of itself---
		SERVER_IP = getLocalIpv4Address();

		// ---start the server---
		Thread serverThread = new Thread(new ServerThread());
		serverThread.start();
	}

	@Override
	protected void onStop() {
		super.onStop();
		try {
			serverSocket.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	/*
	 * @Override public boolean onCreateOptionsMenu(Menu menu) {
	 * getMenuInflater().inflate(R.menu.activity_main, menu); return true; }
	 */

	/**
	 * Called when the user clicks on the image (for now) later it will be
	 * called after a certain time interval
	 */
	public void gotoLogin(View view) {

		if (android_id.contains("f2113d40eb7bd59a")
				|| android_id.contains("f02b4307b728b94c")
				|| android_id.contains("694b02a18151671a")) {
			// *************************************************
			// Creating Object to send the intent to start the Screen
			// properties
			Intent intent = new Intent(this, Login.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			// *************************************************
			// Sending the Operating System the intent to start Activity
			startActivity(intent);
		}

		else if (android_id.contains("2cc0cff86966c395")
				|| android_id.contains("a5fb5698b3bd699c")
				|| android_id.contains("c597067a9c7abbd3")) {
			// *************************************************
			// Creating Object to send the intent right to the video
			// screen
			Intent intent = new Intent(this, CarDroidDuinoActivity.class);
			intent.putExtra("EXTRA_ANDROID_ID", android_id);
			startActivity(intent);

		}
	}
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2014-11-13 21:54:59.007
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2648)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:503)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2426)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:534)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:183)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2656)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1219)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:291)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1207)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:807)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)
