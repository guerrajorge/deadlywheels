package groupa.deadlywheels.carcontrol;


import groupa.deadlywheels.core.CarDroiDuinoCore;
import groupa.deadlywheels.utils.SystemProperties;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.SocketException;

import android.util.Log;

public class DatagramSocketArduinoWorker implements Runnable{

	/**
	 * Core System - Prov Queues for Data Exchange between System Threads
	 */
	private CarDroiDuinoCore systemCore;

	/**
	 * Socket for connection via UPD with Server and receipt of Frames
	 */
	private DatagramSocket datagramSocket;
	/**
	 * Looping Control of Thread
	 */
	private boolean isOn = false;
	
	public DatagramSocketArduinoWorker(CarDroiDuinoCore systemCore,
			int clientPort) throws SocketException {
		this.systemCore = systemCore;
		// **********************************************
		// Booting Datagram connection
		this.datagramSocket = new DatagramSocket(clientPort);
		// **********************************************
		this.isOn = true;
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * Thread the ends of communication
	 */
	public void turnOff() {
		this.isOn = false;
		try {
			this.datagramSocket.disconnect();
			this.datagramSocket.close();
		} catch (Exception ex) {
			Log.e("DatagramSocketClientReceiverWorker - Exception",
					ex.getMessage());
		}
	}

}
